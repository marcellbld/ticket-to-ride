{"ast":null,"code":"import React from\"react\";import{useSelector}from\"react-redux\";import{selectAllPlayerCards}from\"../../../../state/deck/selector\";import{selectCurrentPlayer,selectPlayers}from\"../../../../state/players/selector\";import PlayerIndicator from\"./PlayerIndicator\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function PlayerIndicatorPanel(){var players=useSelector(selectPlayers);var currentPlayer=useSelector(selectCurrentPlayer);var allPlayerCards=useSelector(selectAllPlayerCards);var playerIndicators=players.map(function(player,i){return/*#__PURE__*/_jsx(PlayerIndicator,{player:player,active:player===currentPlayer,cards:allPlayerCards.find(function(cards){return cards.playerId===player.id;}).cards},i);});return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{children:\"J\\xE1t\\xE9kosok\"}),playerIndicators]});}export default PlayerIndicatorPanel;","map":{"version":3,"names":["React","useSelector","selectAllPlayerCards","selectCurrentPlayer","selectPlayers","PlayerIndicator","PlayerIndicatorPanel","players","currentPlayer","allPlayerCards","playerIndicators","map","player","i","find","cards","playerId","id"],"sources":["C:/Win11/Programming/Other/ticket-to-ride-app/src/views/game/panel/player-indicator/PlayerIndicatorPanel.js"],"sourcesContent":["import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectAllPlayerCards } from \"../../../../state/deck/selector\";\r\nimport {\r\n  selectCurrentPlayer,\r\n  selectPlayers,\r\n} from \"../../../../state/players/selector\";\r\nimport PlayerIndicator from \"./PlayerIndicator\";\r\n\r\nfunction PlayerIndicatorPanel() {\r\n  const players = useSelector(selectPlayers);\r\n  const currentPlayer = useSelector(selectCurrentPlayer);\r\n  const allPlayerCards = useSelector(selectAllPlayerCards);\r\n\r\n  const playerIndicators = players.map((player, i) => (\r\n    <PlayerIndicator\r\n      key={i}\r\n      player={player}\r\n      active={player === currentPlayer}\r\n      cards={allPlayerCards.find((cards) => cards.playerId === player.id).cards}\r\n    ></PlayerIndicator>\r\n  ));\r\n  return (\r\n    <div>\r\n      <span>Játékosok</span>\r\n      {playerIndicators}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlayerIndicatorPanel;\r\n"],"mappings":"AAAA,MAAOA,MAAK,KAAM,OAAO,CACzB,OAASC,WAAW,KAAQ,aAAa,CACzC,OAASC,oBAAoB,KAAQ,iCAAiC,CACtE,OACEC,mBAAmB,CACnBC,aAAa,KACR,oCAAoC,CAC3C,MAAOC,gBAAe,KAAM,mBAAmB,CAAC,wFAEhD,QAASC,qBAAoB,EAAG,CAC9B,GAAMC,QAAO,CAAGN,WAAW,CAACG,aAAa,CAAC,CAC1C,GAAMI,cAAa,CAAGP,WAAW,CAACE,mBAAmB,CAAC,CACtD,GAAMM,eAAc,CAAGR,WAAW,CAACC,oBAAoB,CAAC,CAExD,GAAMQ,iBAAgB,CAAGH,OAAO,CAACI,GAAG,CAAC,SAACC,MAAM,CAAEC,CAAC,qBAC7C,KAAC,eAAe,EAEd,MAAM,CAAED,MAAO,CACf,MAAM,CAAEA,MAAM,GAAKJ,aAAc,CACjC,KAAK,CAAEC,cAAc,CAACK,IAAI,CAAC,SAACC,KAAK,QAAKA,MAAK,CAACC,QAAQ,GAAKJ,MAAM,CAACK,EAAE,GAAC,CAACF,KAAM,EAHrEF,CAAC,CAIW,EACpB,CAAC,CACF,mBACE,oCACE,yCAAsB,CACrBH,gBAAgB,GACb,CAEV,CAEA,cAAeJ,qBAAoB"},"metadata":{},"sourceType":"module"}