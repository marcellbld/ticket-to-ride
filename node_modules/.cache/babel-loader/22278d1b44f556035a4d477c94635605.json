{"ast":null,"code":"import _objectSpread from\"C:/Win11/Programming/Other/ticket-to-ride-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _toConsumableArray from\"C:/Win11/Programming/Other/ticket-to-ride-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"C:/Win11/Programming/Other/ticket-to-ride-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import{useDispatch,useSelector}from\"react-redux\";import{ClientMessages}from\"../../../../api/socket\";import{CardStates}from\"../../../../domain/card\";import{Colors}from\"../../../../domain/colors\";import{GameStates}from\"../../../../domain/game\";import{updateCard}from\"../../../../state/deck/actions\";import{selectPublicCards}from\"../../../../state/deck/selector\";import{setGameState}from\"../../../../state/game/actions\";import{selectGame}from\"../../../../state/game/selector\";import{addHistory}from\"../../../../state/players/actions\";import{selectCurrentPlayer,selectLocalPlayer}from\"../../../../state/players/selector\";import{wsSendMessage}from\"../../../../state/socket/actions\";import Card from\"../../Card\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function PublicCardsPanel(_ref){var changeShowNotificationModal=_ref.changeShowNotificationModal;var cards=useSelector(selectPublicCards);var game=useSelector(selectGame);var _useState=useState(false),_useState2=_slicedToArray(_useState,2),waiting=_useState2[0],setWaiting=_useState2[1];var currentPlayer=useSelector(selectCurrentPlayer);var localPlayer=useSelector(selectLocalPlayer);var dispatch=useDispatch();var cardsComponents=_toConsumableArray(Array(5).keys()).map(function(i){var cardData=cards.find(function(card){return card.cardState===CardStates.PUBLIC[i];});return/*#__PURE__*/_jsx(Card,{cardData:cardData,clickable:!waiting,onClick:function onClick(){if(waiting||!cardData)return;if(currentPlayer===localPlayer&&game.gameState===GameStates.USER_BEGIN||game.gameState===GameStates.DRAW_CARDS&&cardData.color!==Colors.LOCOMOTIVE){setTimeout(function(){dispatch(addHistory(currentPlayer.id,\"Kártyát húzott: \"+Object.keys(Colors).find(function(c){return Colors[c]===cardData.color;})));dispatch(updateCard(_objectSpread(_objectSpread({},cardData),{},{cardState:currentPlayer.id})));setWaiting(false);},250);setWaiting(true);dispatch(setGameState(game.gameState===GameStates.USER_BEGIN?cardData.color===Colors.LOCOMOTIVE?GameStates.DRAW_CARD2:GameStates.DRAW_CARDS:GameStates.DRAW_CARD2));dispatch(wsSendMessage(ClientMessages.SYNC_STATE,[game.id,{game:game},true],function(){}));return true;}else{changeShowNotificationModal(\"Most nem tudsz új kártyát húzni.\");}return false;}},i);});return/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"mx-auto\",children:\"Felfedett vas\\xFAtkocsi-k\\xE1rty\\xE1k\"}),/*#__PURE__*/_jsx(\"div\",{className:\"my-2 p-0 mx-auto\",children:cardsComponents})]});}export default PublicCardsPanel;","map":{"version":3,"names":["React","useState","useDispatch","useSelector","ClientMessages","CardStates","Colors","GameStates","updateCard","selectPublicCards","setGameState","selectGame","addHistory","selectCurrentPlayer","selectLocalPlayer","wsSendMessage","Card","PublicCardsPanel","changeShowNotificationModal","cards","game","waiting","setWaiting","currentPlayer","localPlayer","dispatch","cardsComponents","Array","keys","map","i","cardData","find","card","cardState","PUBLIC","gameState","USER_BEGIN","DRAW_CARDS","color","LOCOMOTIVE","setTimeout","id","Object","c","DRAW_CARD2","SYNC_STATE"],"sources":["C:/Win11/Programming/Other/ticket-to-ride-app/src/views/game/panel/public-cards/PublicCardsPanel.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ClientMessages } from \"../../../../api/socket\";\r\nimport { CardStates } from \"../../../../domain/card\";\r\nimport { Colors } from \"../../../../domain/colors\";\r\nimport { GameStates } from \"../../../../domain/game\";\r\nimport { updateCard } from \"../../../../state/deck/actions\";\r\nimport { selectPublicCards } from \"../../../../state/deck/selector\";\r\nimport { setGameState } from \"../../../../state/game/actions\";\r\nimport { selectGame } from \"../../../../state/game/selector\";\r\nimport { addHistory } from \"../../../../state/players/actions\";\r\nimport {\r\n  selectCurrentPlayer,\r\n  selectLocalPlayer,\r\n} from \"../../../../state/players/selector\";\r\nimport { wsSendMessage } from \"../../../../state/socket/actions\";\r\nimport Card from \"../../Card\";\r\n\r\nfunction PublicCardsPanel({ changeShowNotificationModal }) {\r\n  const cards = useSelector(selectPublicCards);\r\n  const game = useSelector(selectGame);\r\n  const [waiting, setWaiting] = useState(false);\r\n\r\n  const currentPlayer = useSelector(selectCurrentPlayer);\r\n  const localPlayer = useSelector(selectLocalPlayer);\r\n  const dispatch = useDispatch();\r\n\r\n  const cardsComponents = [...Array(5).keys()].map((i) => {\r\n    const cardData = cards.find(\r\n      (card) => card.cardState === CardStates.PUBLIC[i]\r\n    );\r\n    return (\r\n      <Card\r\n        key={i}\r\n        cardData={cardData}\r\n        clickable={!waiting}\r\n        onClick={() => {\r\n          if (waiting || !cardData) return;\r\n\r\n          if (\r\n            (currentPlayer === localPlayer &&\r\n              game.gameState === GameStates.USER_BEGIN) ||\r\n            (game.gameState === GameStates.DRAW_CARDS &&\r\n              cardData.color !== Colors.LOCOMOTIVE)\r\n          ) {\r\n            setTimeout(() => {\r\n              dispatch(\r\n                addHistory(\r\n                  currentPlayer.id,\r\n                  \"Kártyát húzott: \" +\r\n                    Object.keys(Colors).find(\r\n                      (c) => Colors[c] === cardData.color\r\n                    )\r\n                )\r\n              );\r\n              dispatch(\r\n                updateCard({ ...cardData, cardState: currentPlayer.id })\r\n              );\r\n              setWaiting(false);\r\n            }, 250);\r\n            setWaiting(true);\r\n            dispatch(\r\n              setGameState(\r\n                game.gameState === GameStates.USER_BEGIN\r\n                  ? cardData.color === Colors.LOCOMOTIVE\r\n                    ? GameStates.DRAW_CARD2\r\n                    : GameStates.DRAW_CARDS\r\n                  : GameStates.DRAW_CARD2\r\n              )\r\n            );\r\n            dispatch(\r\n              wsSendMessage(\r\n                ClientMessages.SYNC_STATE,\r\n                [\r\n                  game.id,\r\n                  { game: game },\r\n                  true,\r\n                ],\r\n                function () {}\r\n              )\r\n            );\r\n            return true;\r\n          } else {\r\n            changeShowNotificationModal(\"Most nem tudsz új kártyát húzni.\");\r\n          }\r\n          return false;\r\n        }}\r\n      ></Card>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"mx-auto\">Felfedett vasútkocsi-kártyák</div>\r\n      <div className=\"my-2 p-0 mx-auto\">{cardsComponents}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PublicCardsPanel;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}