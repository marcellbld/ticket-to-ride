{"ast":null,"code":"import { CardStates } from \"../../domain/card\";\nimport { Colors } from \"../../domain/colors\";\nimport { selectLocalPlayer, selectPlayers } from \"../players/selector\";\nexport function selectDeck(state) {\n  return state.deck;\n}\nexport function selectFreeCards(state) {\n  return selectDeck(state).filter(card => card.cardState === CardStates.DECK);\n}\nexport function selectAllPlayerCards(state) {\n  const deck = selectDeck(state).filter(card => card.cardState >= CardStates.PLAYERS[0]);\n  const players = selectPlayers(state);\n  const output = [];\n  for (let player of players) {\n    output.push({\n      playerId: player.id,\n      cards: getPlayerCards(deck, player.id)\n    });\n  }\n  return output;\n}\nexport function selectLocalPlayerCards(state) {\n  const player = selectLocalPlayer(state);\n  return getPlayerCards(selectDeck(state), player.id);\n}\nexport function selectPublicCards(state) {\n  return selectDeck(state).filter(card => CardStates.PUBLIC.includes(card.cardState));\n}\nexport function selectTopCardOfDeck(state) {\n  const deck = selectDeck(state).filter(card => card.cardState === CardStates.DECK);\n  return deck[0];\n}\nfunction getPlayerCards(deck, cardState) {\n  const cards = deck.filter(card => card.cardState === cardState);\n  const outputCards = [];\n  for (let color of Object.values(Colors)) {\n    const amount = cards.filter(c => c.color === color).length;\n    outputCards.push({\n      color,\n      amount\n    });\n  }\n  return outputCards;\n}","map":{"version":3,"names":["CardStates","Colors","selectLocalPlayer","selectPlayers","selectDeck","state","deck","selectFreeCards","filter","card","cardState","DECK","selectAllPlayerCards","PLAYERS","players","output","player","push","playerId","id","cards","getPlayerCards","selectLocalPlayerCards","selectPublicCards","PUBLIC","includes","selectTopCardOfDeck","outputCards","color","Object","values","amount","c","length"],"sources":["C:/Win11/Programming/Other/ticket-to-ride-app/src/state/deck/selector.js"],"sourcesContent":["import { CardStates } from \"../../domain/card\";\r\nimport { Colors } from \"../../domain/colors\";\r\nimport { selectLocalPlayer, selectPlayers } from \"../players/selector\";\r\n\r\nexport function selectDeck(state) {\r\n  return state.deck;\r\n}\r\n\r\nexport function selectFreeCards(state) {\r\n  return selectDeck(state).filter((card) => card.cardState === CardStates.DECK);\r\n}\r\n\r\nexport function selectAllPlayerCards(state) {\r\n  const deck = selectDeck(state).filter((card) => card.cardState >= CardStates.PLAYERS[0]);\r\n  const players = selectPlayers(state);\r\n\r\n  const output = [];\r\n  for(let player of players) {\r\n    output.push({playerId: player.id, cards: getPlayerCards(deck, player.id)});\r\n  }\r\n  return output;\r\n}\r\n\r\nexport function selectLocalPlayerCards(state) {\r\n  const player = selectLocalPlayer(state);\r\n\r\n  return getPlayerCards(selectDeck(state), player.id);\r\n}\r\n\r\nexport function selectPublicCards(state) {\r\n  return selectDeck(state).filter((card) => CardStates.PUBLIC.includes(card.cardState));\r\n}\r\n\r\nexport function selectTopCardOfDeck(state) {\r\n  const deck = selectDeck(state).filter((card) => card.cardState === CardStates.DECK);\r\n  return deck[0];\r\n}\r\n\r\nfunction getPlayerCards(deck, cardState) {\r\n  const cards = deck.filter(\r\n    (card) => card.cardState === cardState\r\n  );\r\n\r\n  const outputCards = [];\r\n  for (let color of Object.values(Colors)) {\r\n    const amount = cards.filter((c) => c.color === color).length;\r\n      outputCards.push({ color, amount });\r\n  }\r\n\r\n  return outputCards;\r\n}\r\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,mBAAmB;AAC9C,SAASC,MAAM,QAAQ,qBAAqB;AAC5C,SAASC,iBAAiB,EAAEC,aAAa,QAAQ,qBAAqB;AAEtE,OAAO,SAASC,UAAU,CAACC,KAAK,EAAE;EAChC,OAAOA,KAAK,CAACC,IAAI;AACnB;AAEA,OAAO,SAASC,eAAe,CAACF,KAAK,EAAE;EACrC,OAAOD,UAAU,CAACC,KAAK,CAAC,CAACG,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,SAAS,KAAKV,UAAU,CAACW,IAAI,CAAC;AAC/E;AAEA,OAAO,SAASC,oBAAoB,CAACP,KAAK,EAAE;EAC1C,MAAMC,IAAI,GAAGF,UAAU,CAACC,KAAK,CAAC,CAACG,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,SAAS,IAAIV,UAAU,CAACa,OAAO,CAAC,CAAC,CAAC,CAAC;EACxF,MAAMC,OAAO,GAAGX,aAAa,CAACE,KAAK,CAAC;EAEpC,MAAMU,MAAM,GAAG,EAAE;EACjB,KAAI,IAAIC,MAAM,IAAIF,OAAO,EAAE;IACzBC,MAAM,CAACE,IAAI,CAAC;MAACC,QAAQ,EAAEF,MAAM,CAACG,EAAE;MAAEC,KAAK,EAAEC,cAAc,CAACf,IAAI,EAAEU,MAAM,CAACG,EAAE;IAAC,CAAC,CAAC;EAC5E;EACA,OAAOJ,MAAM;AACf;AAEA,OAAO,SAASO,sBAAsB,CAACjB,KAAK,EAAE;EAC5C,MAAMW,MAAM,GAAGd,iBAAiB,CAACG,KAAK,CAAC;EAEvC,OAAOgB,cAAc,CAACjB,UAAU,CAACC,KAAK,CAAC,EAAEW,MAAM,CAACG,EAAE,CAAC;AACrD;AAEA,OAAO,SAASI,iBAAiB,CAAClB,KAAK,EAAE;EACvC,OAAOD,UAAU,CAACC,KAAK,CAAC,CAACG,MAAM,CAAEC,IAAI,IAAKT,UAAU,CAACwB,MAAM,CAACC,QAAQ,CAAChB,IAAI,CAACC,SAAS,CAAC,CAAC;AACvF;AAEA,OAAO,SAASgB,mBAAmB,CAACrB,KAAK,EAAE;EACzC,MAAMC,IAAI,GAAGF,UAAU,CAACC,KAAK,CAAC,CAACG,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,SAAS,KAAKV,UAAU,CAACW,IAAI,CAAC;EACnF,OAAOL,IAAI,CAAC,CAAC,CAAC;AAChB;AAEA,SAASe,cAAc,CAACf,IAAI,EAAEI,SAAS,EAAE;EACvC,MAAMU,KAAK,GAAGd,IAAI,CAACE,MAAM,CACtBC,IAAI,IAAKA,IAAI,CAACC,SAAS,KAAKA,SAAS,CACvC;EAED,MAAMiB,WAAW,GAAG,EAAE;EACtB,KAAK,IAAIC,KAAK,IAAIC,MAAM,CAACC,MAAM,CAAC7B,MAAM,CAAC,EAAE;IACvC,MAAM8B,MAAM,GAAGX,KAAK,CAACZ,MAAM,CAAEwB,CAAC,IAAKA,CAAC,CAACJ,KAAK,KAAKA,KAAK,CAAC,CAACK,MAAM;IAC1DN,WAAW,CAACV,IAAI,CAAC;MAAEW,KAAK;MAAEG;IAAO,CAAC,CAAC;EACvC;EAEA,OAAOJ,WAAW;AACpB"},"metadata":{},"sourceType":"module"}