{"ast":null,"code":"import _createForOfIteratorHelper from\"C:/Win11/Programming/Other/ticket-to-ride-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import _objectSpread from\"C:/Win11/Programming/Other/ticket-to-ride-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _toConsumableArray from\"C:/Win11/Programming/Other/ticket-to-ride-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import{CardStates}from\"../../domain/card\";import{Colors}from\"../../domain/colors\";import{REMOVE_CARD_FROM_PLAYER,SET_DECK,UPDATE_CARD}from\"./actions\";var initialState=[];export function deckReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;var type=action.type,payload=action.payload;switch(type){case SET_DECK:return payload;case UPDATE_CARD:return updateCard(state,payload);case REMOVE_CARD_FROM_PLAYER:var playerId=payload.playerId,color=payload.color,amount=payload.amount;return removeCardFromPlayer(state,playerId,color,amount);default:return state;}}function refreshPublicCards(deck){var newDeck=_toConsumableArray(deck);var publicCards=newDeck.filter(function(card){return CardStates.PUBLIC.includes(card.cardState);});var _loop=function _loop(i){if(!publicCards.some(function(card){return card.cardState===CardStates.PUBLIC[i];})){var _iterator=_createForOfIteratorHelper(newDeck),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var card=_step.value;if(card.cardState===CardStates.DECK){card.cardState=CardStates.PUBLIC[i];publicCards.push(card);break;}}}catch(err){_iterator.e(err);}finally{_iterator.f();}}};for(var i=0;i<CardStates.PUBLIC.length;i++){_loop(i);}if(publicCards.filter(function(card){return card.color===Colors.LOCOMOTIVE;}).length>=3){newDeck=newDeck.map(function(card){if(CardStates.PUBLIC.includes(card.cardState))return _objectSpread(_objectSpread({},card),{},{cardState:CardStates.REMOVED});return card;});return refreshPublicCards(newDeck);}return newDeck;}function updateCard(deck,updatedCard){var isPublicCard=false;var updatedDeck=deck.map(function(card){if(card.id===updatedCard.id){if(card.cardState<=CardStates.PUBLIC[0]){isPublicCard=true;}return updatedCard;}else{return card;}});if(isPublicCard){updatedDeck=refreshPublicCards(updatedDeck);}return updatedDeck;}function removeCardFromPlayer(deck,playerId,color,amount){var updatedCards=0;var updatedDeck=deck.map(function(card){if(updatedCards<amount&&card.cardState===playerId&&card.color===color){updatedCards++;return _objectSpread(_objectSpread({},card),{},{cardState:CardStates.REMOVED});}return card;});return updatedDeck;}","map":{"version":3,"names":["CardStates","Colors","REMOVE_CARD_FROM_PLAYER","SET_DECK","UPDATE_CARD","initialState","deckReducer","state","action","type","payload","updateCard","playerId","color","amount","removeCardFromPlayer","refreshPublicCards","deck","newDeck","publicCards","filter","card","PUBLIC","includes","cardState","i","some","DECK","push","length","LOCOMOTIVE","map","REMOVED","updatedCard","isPublicCard","updatedDeck","id","updatedCards"],"sources":["C:/Win11/Programming/Other/ticket-to-ride-app/src/state/deck/reducer.js"],"sourcesContent":["import { CardStates } from \"../../domain/card\";\r\nimport { Colors } from \"../../domain/colors\";\r\nimport { REMOVE_CARD_FROM_PLAYER, SET_DECK, UPDATE_CARD } from \"./actions\";\r\n\r\nconst initialState = [];\r\nexport function deckReducer(state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case SET_DECK:\r\n      return payload;\r\n    case UPDATE_CARD:\r\n      return updateCard(state, payload);\r\n    case REMOVE_CARD_FROM_PLAYER:\r\n      const { playerId, color, amount } = payload;\r\n      return removeCardFromPlayer(state, playerId, color, amount);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction refreshPublicCards(deck) {\r\n  let newDeck = [...deck];\r\n  let publicCards = newDeck.filter((card) =>\r\n    CardStates.PUBLIC.includes(card.cardState)\r\n  );\r\n\r\n  for (let i = 0; i < CardStates.PUBLIC.length; i++) {\r\n    if (!publicCards.some((card) => card.cardState === CardStates.PUBLIC[i])) {\r\n      for (let card of newDeck) {\r\n        if (card.cardState === CardStates.DECK) {\r\n          card.cardState = CardStates.PUBLIC[i];\r\n          publicCards.push(card);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  if (\r\n    publicCards.filter((card) => card.color === Colors.LOCOMOTIVE).length >= 3\r\n  ) {\r\n    newDeck = newDeck.map((card) => {\r\n      if (CardStates.PUBLIC.includes(card.cardState))\r\n        return {...card, cardState: CardStates.REMOVED};\r\n\r\n      return card;\r\n    });\r\n    return refreshPublicCards(newDeck);\r\n  }\r\n\r\n  return newDeck;\r\n}\r\n\r\nfunction updateCard(deck, updatedCard) {\r\n  let isPublicCard = false;\r\n  let updatedDeck = deck.map((card) => {\r\n    if (card.id === updatedCard.id) {\r\n      if (card.cardState <= CardStates.PUBLIC[0]) {\r\n        isPublicCard = true;\r\n      }\r\n      return updatedCard;\r\n    } else {\r\n      return card;\r\n    }\r\n  });\r\n  if (isPublicCard) {\r\n    updatedDeck = refreshPublicCards(updatedDeck);\r\n  }\r\n\r\n  return updatedDeck;\r\n}\r\n\r\nfunction removeCardFromPlayer(deck, playerId, color, amount) {\r\n  let updatedCards = 0;\r\n  let updatedDeck = deck.map((card) => {\r\n    if (\r\n      updatedCards < amount &&\r\n      card.cardState === playerId &&\r\n      card.color === color\r\n    ) {\r\n      updatedCards++;\r\n      return { ...card, cardState: CardStates.REMOVED };\r\n    }\r\n    return card;\r\n  });\r\n  return updatedDeck;\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}