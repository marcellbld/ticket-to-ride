{"ast":null,"code":"var _jsxFileName = \"C:\\\\Win11\\\\Programming\\\\Other\\\\ticket-to-ride-app\\\\src\\\\views\\\\game\\\\panel\\\\public-cards\\\\PublicCardsPanel.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ClientMessages } from \"../../../../api/socket\";\nimport { CardStates } from \"../../../../domain/card\";\nimport { Colors } from \"../../../../domain/colors\";\nimport { GameStates } from \"../../../../domain/game\";\nimport { updateCard } from \"../../../../state/deck/actions\";\nimport { selectPublicCards } from \"../../../../state/deck/selector\";\nimport { setGameState } from \"../../../../state/game/actions\";\nimport { selectGame } from \"../../../../state/game/selector\";\nimport { addHistory } from \"../../../../state/players/actions\";\nimport { selectCurrentPlayer, selectLocalPlayer } from \"../../../../state/players/selector\";\nimport { wsSendMessage } from \"../../../../state/socket/actions\";\nimport Card from \"../../Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PublicCardsPanel(_ref) {\n  _s();\n  let {\n    changeShowNotificationModal\n  } = _ref;\n  const cards = useSelector(selectPublicCards);\n  const game = useSelector(selectGame);\n  const [waiting, setWaiting] = useState(false);\n  const currentPlayer = useSelector(selectCurrentPlayer);\n  const localPlayer = useSelector(selectLocalPlayer);\n  const dispatch = useDispatch();\n  const cardsComponents = [...Array(5).keys()].map(i => {\n    const cardData = cards.find(card => card.cardState === CardStates.PUBLIC[i]);\n    return /*#__PURE__*/_jsxDEV(Card, {\n      cardData: cardData,\n      clickable: !waiting,\n      onClick: () => {\n        if (waiting || !cardData) return;\n        if (currentPlayer === localPlayer && game.gameState === GameStates.USER_BEGIN || game.gameState === GameStates.DRAW_CARDS && cardData.color !== Colors.LOCOMOTIVE) {\n          setTimeout(() => {\n            dispatch(addHistory(currentPlayer.id, \"Kártyát húzott: \" + Object.keys(Colors).find(c => Colors[c] === cardData.color)));\n            dispatch(updateCard({\n              ...cardData,\n              cardState: currentPlayer.id\n            }));\n            setWaiting(false);\n          }, 250);\n          setWaiting(true);\n          dispatch(setGameState(game.gameState === GameStates.USER_BEGIN ? cardData.color === Colors.LOCOMOTIVE ? GameStates.DRAW_CARD2 : GameStates.DRAW_CARDS : GameStates.DRAW_CARD2));\n          dispatch(wsSendMessage(ClientMessages.SYNC_STATE, [game.id, {\n            game: game\n          }, true], function () {}));\n          return true;\n        } else {\n          changeShowNotificationModal(\"Most nem tudsz új kártyát húzni.\");\n        }\n        return false;\n      }\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mx-auto\",\n      children: \"Felfedett vas\\xFAtkocsi-k\\xE1rty\\xE1k\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"my-2 p-0 mx-auto\",\n      children: cardsComponents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n_s(PublicCardsPanel, \"+y1N7LFnJLam3/Cp2LdqJ5SzpKU=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useDispatch];\n});\n_c = PublicCardsPanel;\nexport default PublicCardsPanel;\nvar _c;\n$RefreshReg$(_c, \"PublicCardsPanel\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","ClientMessages","CardStates","Colors","GameStates","updateCard","selectPublicCards","setGameState","selectGame","addHistory","selectCurrentPlayer","selectLocalPlayer","wsSendMessage","Card","PublicCardsPanel","changeShowNotificationModal","cards","game","waiting","setWaiting","currentPlayer","localPlayer","dispatch","cardsComponents","Array","keys","map","i","cardData","find","card","cardState","PUBLIC","gameState","USER_BEGIN","DRAW_CARDS","color","LOCOMOTIVE","setTimeout","id","Object","c","DRAW_CARD2","SYNC_STATE"],"sources":["C:/Win11/Programming/Other/ticket-to-ride-app/src/views/game/panel/public-cards/PublicCardsPanel.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ClientMessages } from \"../../../../api/socket\";\r\nimport { CardStates } from \"../../../../domain/card\";\r\nimport { Colors } from \"../../../../domain/colors\";\r\nimport { GameStates } from \"../../../../domain/game\";\r\nimport { updateCard } from \"../../../../state/deck/actions\";\r\nimport { selectPublicCards } from \"../../../../state/deck/selector\";\r\nimport { setGameState } from \"../../../../state/game/actions\";\r\nimport { selectGame } from \"../../../../state/game/selector\";\r\nimport { addHistory } from \"../../../../state/players/actions\";\r\nimport {\r\n  selectCurrentPlayer,\r\n  selectLocalPlayer,\r\n} from \"../../../../state/players/selector\";\r\nimport { wsSendMessage } from \"../../../../state/socket/actions\";\r\nimport Card from \"../../Card\";\r\n\r\nfunction PublicCardsPanel({ changeShowNotificationModal }) {\r\n  const cards = useSelector(selectPublicCards);\r\n  const game = useSelector(selectGame);\r\n  const [waiting, setWaiting] = useState(false);\r\n\r\n  const currentPlayer = useSelector(selectCurrentPlayer);\r\n  const localPlayer = useSelector(selectLocalPlayer);\r\n  const dispatch = useDispatch();\r\n\r\n  const cardsComponents = [...Array(5).keys()].map((i) => {\r\n    const cardData = cards.find(\r\n      (card) => card.cardState === CardStates.PUBLIC[i]\r\n    );\r\n    return (\r\n      <Card\r\n        key={i}\r\n        cardData={cardData}\r\n        clickable={!waiting}\r\n        onClick={() => {\r\n          if (waiting || !cardData) return;\r\n\r\n          if (\r\n            (currentPlayer === localPlayer &&\r\n              game.gameState === GameStates.USER_BEGIN) ||\r\n            (game.gameState === GameStates.DRAW_CARDS &&\r\n              cardData.color !== Colors.LOCOMOTIVE)\r\n          ) {\r\n            setTimeout(() => {\r\n              dispatch(\r\n                addHistory(\r\n                  currentPlayer.id,\r\n                  \"Kártyát húzott: \" +\r\n                    Object.keys(Colors).find(\r\n                      (c) => Colors[c] === cardData.color\r\n                    )\r\n                )\r\n              );\r\n              dispatch(\r\n                updateCard({ ...cardData, cardState: currentPlayer.id })\r\n              );\r\n              setWaiting(false);\r\n            }, 250);\r\n            setWaiting(true);\r\n            dispatch(\r\n              setGameState(\r\n                game.gameState === GameStates.USER_BEGIN\r\n                  ? cardData.color === Colors.LOCOMOTIVE\r\n                    ? GameStates.DRAW_CARD2\r\n                    : GameStates.DRAW_CARDS\r\n                  : GameStates.DRAW_CARD2\r\n              )\r\n            );\r\n            dispatch(\r\n              wsSendMessage(\r\n                ClientMessages.SYNC_STATE,\r\n                [\r\n                  game.id,\r\n                  { game: game },\r\n                  true,\r\n                ],\r\n                function () {}\r\n              )\r\n            );\r\n            return true;\r\n          } else {\r\n            changeShowNotificationModal(\"Most nem tudsz új kártyát húzni.\");\r\n          }\r\n          return false;\r\n        }}\r\n      ></Card>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"mx-auto\">Felfedett vasútkocsi-kártyák</div>\r\n      <div className=\"my-2 p-0 mx-auto\">{cardsComponents}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PublicCardsPanel;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}