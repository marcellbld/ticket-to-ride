{"ast":null,"code":"import _createForOfIteratorHelper from\"C:/Win11/Programming/Other/ticket-to-ride-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import{CardStates}from\"../../domain/card\";import{Colors}from\"../../domain/colors\";import{selectLocalPlayer,selectPlayers}from\"../players/selector\";export function selectDeck(state){return state.deck;}export function selectFreeCards(state){return selectDeck(state).filter(function(card){return card.cardState===CardStates.DECK;});}export function selectAllPlayerCards(state){var deck=selectDeck(state).filter(function(card){return card.cardState>=CardStates.PLAYERS[0];});var players=selectPlayers(state);var output=[];var _iterator=_createForOfIteratorHelper(players),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var player=_step.value;output.push({playerId:player.id,cards:getPlayerCards(deck,player.id)});}}catch(err){_iterator.e(err);}finally{_iterator.f();}return output;}export function selectLocalPlayerCards(state){var player=selectLocalPlayer(state);return getPlayerCards(selectDeck(state),player.id);}export function selectPublicCards(state){return selectDeck(state).filter(function(card){return CardStates.PUBLIC.includes(card.cardState);});}export function selectTopCardOfDeck(state){var deck=selectDeck(state).filter(function(card){return card.cardState===CardStates.DECK;});return deck[0];}function getPlayerCards(deck,cardState){var cards=deck.filter(function(card){return card.cardState===cardState;});var outputCards=[];var _loop=function _loop(){var color=_Object$values[_i];var amount=cards.filter(function(c){return c.color===color;}).length;outputCards.push({color:color,amount:amount});};for(var _i=0,_Object$values=Object.values(Colors);_i<_Object$values.length;_i++){_loop();}return outputCards;}","map":{"version":3,"names":["CardStates","Colors","selectLocalPlayer","selectPlayers","selectDeck","state","deck","selectFreeCards","filter","card","cardState","DECK","selectAllPlayerCards","PLAYERS","players","output","player","push","playerId","id","cards","getPlayerCards","selectLocalPlayerCards","selectPublicCards","PUBLIC","includes","selectTopCardOfDeck","outputCards","color","amount","c","length","Object","values"],"sources":["C:/Win11/Programming/Other/ticket-to-ride-app/src/state/deck/selector.js"],"sourcesContent":["import { CardStates } from \"../../domain/card\";\r\nimport { Colors } from \"../../domain/colors\";\r\nimport { selectLocalPlayer, selectPlayers } from \"../players/selector\";\r\n\r\nexport function selectDeck(state) {\r\n  return state.deck;\r\n}\r\n\r\nexport function selectFreeCards(state) {\r\n  return selectDeck(state).filter((card) => card.cardState === CardStates.DECK);\r\n}\r\n\r\nexport function selectAllPlayerCards(state) {\r\n  const deck = selectDeck(state).filter((card) => card.cardState >= CardStates.PLAYERS[0]);\r\n  const players = selectPlayers(state);\r\n\r\n  const output = [];\r\n  for(let player of players) {\r\n    output.push({playerId: player.id, cards: getPlayerCards(deck, player.id)});\r\n  }\r\n  return output;\r\n}\r\n\r\nexport function selectLocalPlayerCards(state) {\r\n  const player = selectLocalPlayer(state);\r\n\r\n  return getPlayerCards(selectDeck(state), player.id);\r\n}\r\n\r\nexport function selectPublicCards(state) {\r\n  return selectDeck(state).filter((card) => CardStates.PUBLIC.includes(card.cardState));\r\n}\r\n\r\nexport function selectTopCardOfDeck(state) {\r\n  const deck = selectDeck(state).filter((card) => card.cardState === CardStates.DECK);\r\n  return deck[0];\r\n}\r\n\r\nfunction getPlayerCards(deck, cardState) {\r\n  const cards = deck.filter(\r\n    (card) => card.cardState === cardState\r\n  );\r\n\r\n  const outputCards = [];\r\n  for (let color of Object.values(Colors)) {\r\n    const amount = cards.filter((c) => c.color === color).length;\r\n      outputCards.push({ color, amount });\r\n  }\r\n\r\n  return outputCards;\r\n}\r\n"],"mappings":"2JAAA,OAASA,UAAU,KAAQ,mBAAmB,CAC9C,OAASC,MAAM,KAAQ,qBAAqB,CAC5C,OAASC,iBAAiB,CAAEC,aAAa,KAAQ,qBAAqB,CAEtE,MAAO,SAASC,WAAU,CAACC,KAAK,CAAE,CAChC,MAAOA,MAAK,CAACC,IAAI,CACnB,CAEA,MAAO,SAASC,gBAAe,CAACF,KAAK,CAAE,CACrC,MAAOD,WAAU,CAACC,KAAK,CAAC,CAACG,MAAM,CAAC,SAACC,IAAI,QAAKA,KAAI,CAACC,SAAS,GAAKV,UAAU,CAACW,IAAI,GAAC,CAC/E,CAEA,MAAO,SAASC,qBAAoB,CAACP,KAAK,CAAE,CAC1C,GAAMC,KAAI,CAAGF,UAAU,CAACC,KAAK,CAAC,CAACG,MAAM,CAAC,SAACC,IAAI,QAAKA,KAAI,CAACC,SAAS,EAAIV,UAAU,CAACa,OAAO,CAAC,CAAC,CAAC,GAAC,CACxF,GAAMC,QAAO,CAAGX,aAAa,CAACE,KAAK,CAAC,CAEpC,GAAMU,OAAM,CAAG,EAAE,CAAC,yCACAD,OAAO,YAAzB,+CAA2B,IAAnBE,OAAM,aACZD,MAAM,CAACE,IAAI,CAAC,CAACC,QAAQ,CAAEF,MAAM,CAACG,EAAE,CAAEC,KAAK,CAAEC,cAAc,CAACf,IAAI,CAAEU,MAAM,CAACG,EAAE,CAAC,CAAC,CAAC,CAC5E,CAAC,qDACD,MAAOJ,OAAM,CACf,CAEA,MAAO,SAASO,uBAAsB,CAACjB,KAAK,CAAE,CAC5C,GAAMW,OAAM,CAAGd,iBAAiB,CAACG,KAAK,CAAC,CAEvC,MAAOgB,eAAc,CAACjB,UAAU,CAACC,KAAK,CAAC,CAAEW,MAAM,CAACG,EAAE,CAAC,CACrD,CAEA,MAAO,SAASI,kBAAiB,CAAClB,KAAK,CAAE,CACvC,MAAOD,WAAU,CAACC,KAAK,CAAC,CAACG,MAAM,CAAC,SAACC,IAAI,QAAKT,WAAU,CAACwB,MAAM,CAACC,QAAQ,CAAChB,IAAI,CAACC,SAAS,CAAC,GAAC,CACvF,CAEA,MAAO,SAASgB,oBAAmB,CAACrB,KAAK,CAAE,CACzC,GAAMC,KAAI,CAAGF,UAAU,CAACC,KAAK,CAAC,CAACG,MAAM,CAAC,SAACC,IAAI,QAAKA,KAAI,CAACC,SAAS,GAAKV,UAAU,CAACW,IAAI,GAAC,CACnF,MAAOL,KAAI,CAAC,CAAC,CAAC,CAChB,CAEA,QAASe,eAAc,CAACf,IAAI,CAAEI,SAAS,CAAE,CACvC,GAAMU,MAAK,CAAGd,IAAI,CAACE,MAAM,CACvB,SAACC,IAAI,QAAKA,KAAI,CAACC,SAAS,GAAKA,SAAS,GACvC,CAED,GAAMiB,YAAW,CAAG,EAAE,CAAC,2BAClB,GAAIC,MAAK,oBACZ,GAAMC,OAAM,CAAGT,KAAK,CAACZ,MAAM,CAAC,SAACsB,CAAC,QAAKA,EAAC,CAACF,KAAK,GAAKA,KAAK,GAAC,CAACG,MAAM,CAC1DJ,WAAW,CAACV,IAAI,CAAC,CAAEW,KAAK,CAALA,KAAK,CAAEC,MAAM,CAANA,MAAO,CAAC,CAAC,CAAC,EAFxC,4BAAkBG,MAAM,CAACC,MAAM,CAAChC,MAAM,CAAC,+BAAE,SAGzC,CAEA,MAAO0B,YAAW,CACpB"},"metadata":{},"sourceType":"module"}