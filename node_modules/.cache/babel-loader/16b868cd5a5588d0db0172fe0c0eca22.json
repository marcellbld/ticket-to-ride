{"ast":null,"code":"import _toConsumableArray from\"C:/Win11/Programming/Other/ticket-to-ride-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _createForOfIteratorHelper from\"C:/Win11/Programming/Other/ticket-to-ride-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import{motion}from\"framer-motion\";import React from\"react\";import{useDispatch,useSelector}from\"react-redux\";import{ClientMessages,GameActionTypes}from\"../../api/socket\";import{ticketToRideData}from\"../../data/ticket-to-ride-data\";import{Colors}from\"../../domain/colors\";import{removeCard}from\"../../state/deck/actions\";import{selectLocalPlayerCards}from\"../../state/deck/selector\";import{setEndTurn}from\"../../state/game/actions\";import{selectGame}from\"../../state/game/selector\";import{addBuiltConnection,addCompletedTicket,addHistory}from\"../../state/players/actions\";import{selectCurrentPlayer}from\"../../state/players/selector\";import{wsSendMessage}from\"../../state/socket/actions\";import{hasConnectionBetweenCities}from\"../../util/pathfinder\";import CurrentPlayerCard from\"./CurrentPlayerCard\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function BuildModal(_ref){var closeModal=_ref.closeModal,buildableConnection=_ref.buildableConnection;var currentPlayerCards=useSelector(selectLocalPlayerCards);var currentPlayer=useSelector(selectCurrentPlayer);var game=useSelector(selectGame);var connection=ticketToRideData.connections[buildableConnection];var dispatch=useDispatch();var combinationData=[];var locomotives=Math.min(currentPlayerCards.find(function(card){return card.color===Colors.LOCOMOTIVE;}).amount,connection.elements.length);if(connection.color===\"gray\"){var _iterator=_createForOfIteratorHelper(currentPlayerCards.filter(function(card){return card.color!==Colors.LOCOMOTIVE;})),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var card=_step.value;if(card.amount>0&&card.amount+locomotives>=connection.elements.length){var colorTrains=Math.min(card.amount,connection.elements.length);var missingTrains=connection.elements.length-colorTrains;var len=colorTrains+locomotives-(connection.elements.length-1);if(locomotives>=connection.elements.length){len--;}for(var i=0;i<len;i++){combinationData.push({color:card.color,amount:connection.elements.length-missingTrains-i,locomotives:missingTrains+i});}}}}catch(err){_iterator.e(err);}finally{_iterator.f();}if(locomotives>=connection.elements.length){combinationData.push({color:Colors.LOCOMOTIVE,amount:0,locomotives:connection.elements.length});}}else{var _colorTrains=Math.min(currentPlayerCards.find(function(card){return card.color===Colors[connection.color.toUpperCase()];}).amount,connection.elements.length);var _missingTrains=connection.elements.length-_colorTrains;var _len=_colorTrains+locomotives-(connection.elements.length-1);for(var _i=0;_i<_len;_i++){combinationData.push({color:Colors[connection.color.toUpperCase()],amount:connection.elements.length-_missingTrains-_i,locomotives:_missingTrains+_i});}}var combinations=combinationData.map(function(_ref2,i){var color=_ref2.color,amount=_ref2.amount,locomotives=_ref2.locomotives;var cards=[];var cardId=0;for(var _i2=0;_i2<amount;_i2++){cards.push(/*#__PURE__*/_jsx(CurrentPlayerCard,{color:color,amount:1},cardId++));}for(var _i3=0;_i3<locomotives;_i3++){cards.push(/*#__PURE__*/_jsx(CurrentPlayerCard,{color:Colors.LOCOMOTIVE,amount:1},cardId++));}return/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex flex-column justify-content-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:cards}),/*#__PURE__*/_jsx(\"button\",{className:\"btn button-orange m-auto\",onClick:function onClick(){if(amount>0){dispatch(removeCard(currentPlayer.id,color,amount));}if(locomotives>0){dispatch(removeCard(currentPlayer.id,Colors.LOCOMOTIVE,locomotives));}dispatch(addBuiltConnection(currentPlayer.id,connection.id,true));dispatch(addHistory(currentPlayer.id,\"Megépített egy útvonalat: \"+connection.fromCity+\" - \"+connection.toCity,true));var _iterator2=_createForOfIteratorHelper(currentPlayer.tickets),_step2;try{var _loop=function _loop(){var ticket=_step2.value;if(!currentPlayer.completedTickets.find(function(t){return t.id===ticket.id;})){var ticketData=Object.values(ticket.long?ticketToRideData.longDestinations:ticketToRideData.destinations)[ticket.id];if(hasConnectionBetweenCities(ticketData.from,ticketData.to,[].concat(_toConsumableArray(currentPlayer.builtConnections),[connection.id]))){dispatch(addCompletedTicket(currentPlayer.id,ticket,true));}}};for(_iterator2.s();!(_step2=_iterator2.n()).done;){_loop();}}catch(err){_iterator2.e(err);}finally{_iterator2.f();}if(currentPlayer.remainingCars-connection.elements.length<=2){dispatch(setEndTurn(currentPlayer.round+2,true));}dispatch(wsSendMessage(ClientMessages.SYNC_ACTION,[game.id,{type:GameActionTypes.NEXT_TURN},false],function(){}));closeModal();},children:\"V\\xE1laszt\"})]},i);});return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(motion.div,{className:\"position-absolute w-100 h-100 d-flex flex-col justify-content-center align-items-center\",style:{backgroundColor:\"#00000088\",top:0,left:0,zIndex:999,opacity:0},animate:{opacity:1},children:/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col\",children:combinations})})})});}export default BuildModal;","map":{"version":3,"names":["motion","React","useDispatch","useSelector","ClientMessages","GameActionTypes","ticketToRideData","Colors","removeCard","selectLocalPlayerCards","setEndTurn","selectGame","addBuiltConnection","addCompletedTicket","addHistory","selectCurrentPlayer","wsSendMessage","hasConnectionBetweenCities","CurrentPlayerCard","BuildModal","closeModal","buildableConnection","currentPlayerCards","currentPlayer","game","connection","connections","dispatch","combinationData","locomotives","Math","min","find","card","color","LOCOMOTIVE","amount","elements","length","filter","colorTrains","missingTrains","len","i","push","toUpperCase","combinations","map","cards","cardId","id","fromCity","toCity","tickets","ticket","completedTickets","t","ticketData","Object","values","long","longDestinations","destinations","from","to","builtConnections","remainingCars","round","SYNC_ACTION","type","NEXT_TURN","backgroundColor","top","left","zIndex","opacity"],"sources":["C:/Win11/Programming/Other/ticket-to-ride-app/src/views/game/BuildModal.js"],"sourcesContent":["import { motion } from \"framer-motion\";\r\nimport React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ClientMessages, GameActionTypes } from \"../../api/socket\";\r\nimport { ticketToRideData } from \"../../data/ticket-to-ride-data\";\r\nimport { Colors } from \"../../domain/colors\";\r\nimport { removeCard } from \"../../state/deck/actions\";\r\nimport { selectLocalPlayerCards } from \"../../state/deck/selector\";\r\nimport { setEndTurn } from \"../../state/game/actions\";\r\nimport { selectGame } from \"../../state/game/selector\";\r\nimport { addBuiltConnection, addCompletedTicket, addHistory } from \"../../state/players/actions\";\r\nimport { selectCurrentPlayer } from \"../../state/players/selector\";\r\nimport { wsSendMessage } from \"../../state/socket/actions\";\r\nimport { hasConnectionBetweenCities } from \"../../util/pathfinder\";\r\nimport CurrentPlayerCard from \"./CurrentPlayerCard\";\r\n\r\nfunction BuildModal({ closeModal, buildableConnection }) {\r\n  const currentPlayerCards = useSelector(selectLocalPlayerCards);\r\n  const currentPlayer = useSelector(selectCurrentPlayer);\r\n  const game = useSelector(selectGame);\r\n  const connection = ticketToRideData.connections[buildableConnection];\r\n  const dispatch = useDispatch();\r\n\r\n  const combinationData = [];\r\n  const locomotives = Math.min(\r\n    currentPlayerCards.find((card) => card.color === Colors.LOCOMOTIVE).amount,\r\n    connection.elements.length\r\n  );\r\n  if (connection.color === \"gray\") {\r\n    for (let card of currentPlayerCards.filter((card) => card.color !== Colors.LOCOMOTIVE)) {\r\n      if (\r\n        card.amount > 0 &&\r\n        card.amount + locomotives >= connection.elements.length\r\n      ) {\r\n        const colorTrains = Math.min(card.amount, connection.elements.length);\r\n        const missingTrains = connection.elements.length - colorTrains;\r\n\r\n        let len =\r\n          colorTrains + locomotives - (connection.elements.length - 1);\r\n\r\n        if(locomotives >= connection.elements.length){\r\n          len--;\r\n        }\r\n\r\n        for (let i = 0; i < len; i++) {\r\n          combinationData.push({\r\n            color: card.color,\r\n            amount: connection.elements.length - missingTrains - i,\r\n            locomotives: missingTrains + i,\r\n          });\r\n        }\r\n      }\r\n    }\r\n    \r\n    if(locomotives >= connection.elements.length){\r\n      combinationData.push({\r\n        color: Colors.LOCOMOTIVE,\r\n        amount: 0,\r\n        locomotives: connection.elements.length\r\n      });\r\n    }\r\n  } else {\r\n    const colorTrains = Math.min(\r\n      currentPlayerCards.find(\r\n        (card) => card.color === Colors[connection.color.toUpperCase()]\r\n      ).amount,\r\n      connection.elements.length\r\n    );\r\n    const missingTrains = connection.elements.length - colorTrains;\r\n\r\n    const len = colorTrains + locomotives - (connection.elements.length - 1);\r\n\r\n    for (let i = 0; i < len; i++) {\r\n      combinationData.push({\r\n        color: Colors[connection.color.toUpperCase()],\r\n        amount: connection.elements.length - missingTrains - i,\r\n        locomotives: missingTrains + i,\r\n      });\r\n    }\r\n  }\r\n  const combinations = combinationData.map(\r\n    ({ color, amount, locomotives }, i) => {\r\n      const cards = [];\r\n      let cardId = 0;\r\n      for (let i = 0; i < amount; i++) {\r\n        cards.push(\r\n          <CurrentPlayerCard\r\n            key={cardId++}\r\n            color={color}\r\n            amount={1}\r\n          ></CurrentPlayerCard>\r\n        );\r\n      }\r\n      for (let i = 0; i < locomotives; i++) {\r\n        cards.push(\r\n          <CurrentPlayerCard\r\n            key={cardId++}\r\n            color={Colors.LOCOMOTIVE}\r\n            amount={1}\r\n          ></CurrentPlayerCard>\r\n        );\r\n      }\r\n      return (\r\n        <div className=\"d-flex flex-column justify-content-center\" key={i}>\r\n          <div className=\"row\">{cards}</div>\r\n          <button\r\n            className=\"btn button-orange m-auto\"\r\n            onClick={() => {\r\n              if (amount > 0) {\r\n                dispatch(removeCard(currentPlayer.id, color, amount));\r\n              }\r\n              if (locomotives > 0) {\r\n                dispatch(\r\n                  removeCard(\r\n                    currentPlayer.id,\r\n                    Colors.LOCOMOTIVE,\r\n                    locomotives\r\n                  )\r\n                );\r\n              }\r\n              dispatch(addBuiltConnection(currentPlayer.id, connection.id, true));\r\n              dispatch(addHistory(currentPlayer.id, \"Megépített egy útvonalat: \"+ connection.fromCity + \" - \" + connection.toCity, true));\r\n\r\n              for(let ticket of currentPlayer.tickets) {\r\n                if(!currentPlayer.completedTickets.find((t) => t.id === ticket.id)){\r\n                  const ticketData = Object.values(\r\n                    ticket.long\r\n                      ? ticketToRideData.longDestinations\r\n                      : ticketToRideData.destinations\r\n                  )[ticket.id];\r\n\r\n                  if(hasConnectionBetweenCities(ticketData.from, ticketData.to, [...currentPlayer.builtConnections, connection.id])){\r\n                    dispatch(addCompletedTicket(currentPlayer.id, ticket, true));\r\n                  }\r\n                }\r\n              }\r\n\r\n              if(currentPlayer.remainingCars - connection.elements.length <= 2) {\r\n                dispatch(setEndTurn(currentPlayer.round+2, true));\r\n              }\r\n\r\n              dispatch(wsSendMessage(ClientMessages.SYNC_ACTION, [game.id, {type: GameActionTypes.NEXT_TURN}, false], function() {}));\r\n              \r\n              closeModal();\r\n            }}\r\n          >\r\n            Választ\r\n          </button>\r\n        </div>\r\n      );\r\n    }\r\n  );\r\n  return (\r\n    <>\r\n      <motion.div\r\n        className=\"position-absolute w-100 h-100 d-flex flex-col justify-content-center align-items-center\"\r\n        style={{\r\n          backgroundColor: \"#00000088\",\r\n          top: 0,\r\n          left: 0,\r\n          zIndex: 999,\r\n          opacity: 0,\r\n        }}\r\n        animate={{ opacity: 1 }}\r\n      >\r\n        <div className=\"row\">\r\n          <div className=\"col\">{combinations}</div>\r\n        </div>\r\n      </motion.div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default BuildModal;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}