{"ast":null,"code":"import _slicedToArray from\"C:/Win11/Programming/Other/ticket-to-ride-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect}from\"react\";import{useState,useRef}from\"react\";import Map from\"./map/Map\";import{ticketToRideData}from\"../../data/ticket-to-ride-data\";import PlayerIndicatorPanel from\"./panel/player-indicator/PlayerIndicatorPanel\";import PublicCardsPanel from\"./panel/public-cards/PublicCardsPanel\";import DeckPanel from\"./panel/deck-panel/DeckPanel\";import TicketDeckPanel from\"./panel/ticket-deck-panel/TicketDeckPanel\";import CurrentPlayerCardsPanel from\"./panel/current-player-cards-panel/CurrentPlayerCardsPanel\";import HistoryPanel from\"./panel/history-panel/HistoryPanel\";import CurrentPlayerTicketPanel from\"./panel/current-player-ticket-panel/CurrentPlayerTicketPanel\";import BuildModal from\"./BuildModal\";import EndGameModal from\"./EndGameModal\";import{useDispatch,useSelector}from\"react-redux\";import{selectGame}from\"../../state/game/selector\";import{Colors}from\"../../domain/colors\";import{selectAllBuiltConnections,selectCurrentPlayer,selectLocalPlayer}from\"../../state/players/selector\";import{nextGameTurn,setEndTurn,setGameState}from\"../../state/game/actions\";import{setDeck}from\"../../state/deck/actions\";import{selectLocalPlayerCards}from\"../../state/deck/selector\";import NotificationModal from\"./NotificationModal\";import{GameStates}from\"../../domain/game\";import{wsSubscribeChannel}from\"../../state/socket/actions\";import{GameActionTypes,ServerMessages}from\"../../api/socket\";import{addBuiltConnection,addCompletedTicket,addHistory,addTicket}from\"../../state/players/actions\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function useNotificationModalShow(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showNotificationModal=_useState2[0],setShowNotificationModal=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),notificationMessage=_useState4[0],setNotificationMessage=_useState4[1];var changeShowNotificationModal=function changeShowNotificationModal(message){if(showNotificationModal)return;setTimeout(function(){setShowNotificationModal(false);},1000);setNotificationMessage(message);setShowNotificationModal(true);};return{showNotificationModal:showNotificationModal,notificationMessage:notificationMessage,changeShowNotificationModal:changeShowNotificationModal};}function useBuildModalShow(){var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),showBuildModal=_useState6[0],setShowBuildModal=_useState6[1];var _useState7=useState(-1),_useState8=_slicedToArray(_useState7,2),buildableConnection=_useState8[0],setBuildableConnection=_useState8[1];var changeShowBuildModal=function changeShowBuildModal(show,connectionId){setBuildableConnection(connectionId);setShowBuildModal(show);};return{showBuildModal:showBuildModal,buildableConnection:buildableConnection,changeShowBuildModal:changeShowBuildModal};}function useCurrentTicketShow(localPlayerTickets){var _useState9=useState(0),_useState10=_slicedToArray(_useState9,2),currentTicketShow=_useState10[0],setCurrentTicketShow=_useState10[1];var id=useRef(0);var changeCurrentTicketShow=function changeCurrentTicketShow(changeValue){id.current+=changeValue;if(id.current<0){id.current=localPlayerTickets.length-1;}else if(id.current>localPlayerTickets.length-1){id.current=0;}setCurrentTicketShow(id.current);};return{currentTicketShow:currentTicketShow,changeCurrentTicketShow:changeCurrentTicketShow};}function GamePage(_ref){var setAppState=_ref.setAppState;var game=useSelector(selectGame);var currentPlayer=useSelector(selectCurrentPlayer);var localPlayer=useSelector(selectLocalPlayer);var dispatch=useDispatch();useEffect(function(){dispatch(wsSubscribeChannel(ServerMessages.ACTION_SENT,function(resp){var payload=resp.action.payload;switch(resp.action.type){case GameActionTypes.NEXT_TURN:dispatch(nextGameTurn());break;case GameActionTypes.ADD_BUILT_CONNECTION:dispatch(addBuiltConnection(payload.playerId,payload.connectionId));break;case GameActionTypes.ADD_TICKET:dispatch(addTicket(payload.playerId,payload.ticket));break;case GameActionTypes.ADD_HISTORY:dispatch(addHistory(payload.playerId,payload.historyElement));break;case GameActionTypes.ADD_COMPLETED_TICKET:dispatch(addCompletedTicket(payload.playerId,payload.ticket));break;case GameActionTypes.END_TURN:dispatch(setEndTurn(payload));break;default:break;}}));dispatch(wsSubscribeChannel(ServerMessages.STATE_CHANGED,function(resp){var state=resp.state;if(state.deck){dispatch(setDeck(state.deck));}}));},[dispatch]);var localPlayerTickets=localPlayer.tickets;var allBuiltConnections=useSelector(selectAllBuiltConnections);var localPlayerCards=useSelector(selectLocalPlayerCards);var _useState11=useState(null),_useState12=_slicedToArray(_useState11,2),showTicketCities=_useState12[0],setShowTicketCities=_useState12[1];var _useCurrentTicketShow=useCurrentTicketShow(localPlayerTickets),currentTicketShow=_useCurrentTicketShow.currentTicketShow,changeCurrentTicketShow=_useCurrentTicketShow.changeCurrentTicketShow;var _useBuildModalShow=useBuildModalShow(),showBuildModal=_useBuildModalShow.showBuildModal,buildableConnection=_useBuildModalShow.buildableConnection,changeShowBuildModal=_useBuildModalShow.changeShowBuildModal;var _useNotificationModal=useNotificationModalShow(),showNotificationModal=_useNotificationModal.showNotificationModal,notificationMessage=_useNotificationModal.notificationMessage,changeShowNotificationModal=_useNotificationModal.changeShowNotificationModal;var _useState13=useState(null),_useState14=_slicedToArray(_useState13,2),chosenCity=_useState14[0],_setChosenCity=_useState14[1];return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"h-100 w-100 d-flex flex-column\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex-grow-1 d-flex flex-row mt-2\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"side-bar text-center d-flex flex-column\",children:/*#__PURE__*/_jsx(PlayerIndicatorPanel,{})}),/*#__PURE__*/_jsx(\"div\",{className:\"flex-grow-1 text-center px-2 d-flex align-items-center\",children:/*#__PURE__*/_jsx(Map,{chosenCity:chosenCity,setChosenCity:function setChosenCity(city){if(localPlayer!==currentPlayer||game.gameState!==GameStates.USER_BEGIN&&game.gameState!==GameStates.BUILD_LINE){changeShowNotificationModal(\"Most nem tudsz építeni.\");return;}if(city===chosenCity){_setChosenCity(null);dispatch(setGameState(GameStates.USER_BEGIN));}else if(chosenCity){var occupiedConnections=allBuiltConnections.flatMap(function(_ref2){var _=_ref2._,connections=_ref2.connections;return connections;});var connection=Object.values(ticketToRideData.connections).find(function(connection){return connection.fromCity===city&&connection.toCity===chosenCity||connection.fromCity===chosenCity&&connection.toCity===city;});if(connection.elements.length>localPlayer.remainingCars){changeShowNotificationModal(\"Nincs elég vagonod.\");return;}var hasEnoughCards=connection&&localPlayerCards.some(function(_ref3){var color=_ref3.color,amount=_ref3.amount;return(connection.color===\"gray\"||color===Colors[connection.color.toUpperCase()]||color===Colors.LOCOMOTIVE)&&amount>=connection.elements.length;});if(!hasEnoughCards){var locomotives=localPlayerCards.find(function(card){return card.color===Colors.LOCOMOTIVE;}).amount;if(connection.color===\"gray\"){hasEnoughCards=localPlayerCards.some(function(_ref4){var _=_ref4._,amount=_ref4.amount;return locomotives+amount>=connection.elements.length;});}else{var colorTrains=localPlayerCards.find(function(card){return card.color===Colors[connection.color.toUpperCase()];}).amount;hasEnoughCards=colorTrains+locomotives>=connection.elements.length;}}if(connection&&!occupiedConnections.includes(connection.id)&&hasEnoughCards){changeShowBuildModal(true,connection.id);}else{dispatch(setGameState(GameStates.USER_BEGIN));changeShowNotificationModal(\"Ezt a vonalat nem tudod megépíteni.\");}_setChosenCity(null);}else{_setChosenCity(city);dispatch(setGameState(GameStates.BUILD_LINE));}},showTicketCities:showTicketCities})}),/*#__PURE__*/_jsxs(\"div\",{className:\"side-bar text-center d-flex flex-column align-items-center\",children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(PublicCardsPanel,{changeShowNotificationModal:changeShowNotificationModal})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(DeckPanel,{})}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-auto mb-4\",children:/*#__PURE__*/_jsx(TicketDeckPanel,{setShowTicketCities:setShowTicketCities,changeShowNotificationModal:changeShowNotificationModal})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bottom-bar d-flex flex-row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"side-bar text-center d-flex flex-column\",children:/*#__PURE__*/_jsx(CurrentPlayerTicketPanel,{currentTicketShow:currentTicketShow,changeCurrentTicketShow:changeCurrentTicketShow,setShowTicketCities:setShowTicketCities})}),/*#__PURE__*/_jsx(\"div\",{className:\"flex-grow-1 text-center px-2 col\",children:/*#__PURE__*/_jsx(CurrentPlayerCardsPanel,{})}),/*#__PURE__*/_jsx(\"div\",{className:\"side-bar text-center d-flex flex-column\",children:/*#__PURE__*/_jsx(HistoryPanel,{})})]})]}),showNotificationModal&&/*#__PURE__*/_jsx(NotificationModal,{message:notificationMessage}),showBuildModal&&/*#__PURE__*/_jsx(BuildModal,{buildableConnection:buildableConnection,closeModal:function closeModal(){changeShowBuildModal(false,-1);}}),game.gameState===GameStates.END_GAME&&/*#__PURE__*/_jsx(EndGameModal,{setAppState:setAppState,showTicketCities:showTicketCities,setShowTicketCities:setShowTicketCities})]});}export default GamePage;","map":{"version":3,"names":["React","useEffect","useState","useRef","Map","ticketToRideData","PlayerIndicatorPanel","PublicCardsPanel","DeckPanel","TicketDeckPanel","CurrentPlayerCardsPanel","HistoryPanel","CurrentPlayerTicketPanel","BuildModal","EndGameModal","useDispatch","useSelector","selectGame","Colors","selectAllBuiltConnections","selectCurrentPlayer","selectLocalPlayer","nextGameTurn","setEndTurn","setGameState","setDeck","selectLocalPlayerCards","NotificationModal","GameStates","wsSubscribeChannel","GameActionTypes","ServerMessages","addBuiltConnection","addCompletedTicket","addHistory","addTicket","useNotificationModalShow","showNotificationModal","setShowNotificationModal","notificationMessage","setNotificationMessage","changeShowNotificationModal","message","setTimeout","useBuildModalShow","showBuildModal","setShowBuildModal","buildableConnection","setBuildableConnection","changeShowBuildModal","show","connectionId","useCurrentTicketShow","localPlayerTickets","currentTicketShow","setCurrentTicketShow","id","changeCurrentTicketShow","changeValue","current","length","GamePage","setAppState","game","currentPlayer","localPlayer","dispatch","ACTION_SENT","resp","payload","action","type","NEXT_TURN","ADD_BUILT_CONNECTION","playerId","ADD_TICKET","ticket","ADD_HISTORY","historyElement","ADD_COMPLETED_TICKET","END_TURN","STATE_CHANGED","state","deck","tickets","allBuiltConnections","localPlayerCards","showTicketCities","setShowTicketCities","chosenCity","setChosenCity","city","gameState","USER_BEGIN","BUILD_LINE","occupiedConnections","flatMap","_","connections","connection","Object","values","find","fromCity","toCity","elements","remainingCars","hasEnoughCards","some","color","amount","toUpperCase","LOCOMOTIVE","locomotives","card","colorTrains","includes","END_GAME"],"sources":["C:/Win11/Programming/Other/ticket-to-ride-app/src/views/game/GamePage.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useState, useRef } from \"react\";\r\nimport Map from \"./map/Map\";\r\nimport { ticketToRideData } from \"../../data/ticket-to-ride-data\";\r\nimport PlayerIndicatorPanel from \"./panel/player-indicator/PlayerIndicatorPanel\";\r\nimport PublicCardsPanel from \"./panel/public-cards/PublicCardsPanel\";\r\nimport DeckPanel from \"./panel/deck-panel/DeckPanel\";\r\nimport TicketDeckPanel from \"./panel/ticket-deck-panel/TicketDeckPanel\";\r\nimport CurrentPlayerCardsPanel from \"./panel/current-player-cards-panel/CurrentPlayerCardsPanel\";\r\nimport HistoryPanel from \"./panel/history-panel/HistoryPanel\";\r\nimport CurrentPlayerTicketPanel from \"./panel/current-player-ticket-panel/CurrentPlayerTicketPanel\";\r\nimport BuildModal from \"./BuildModal\";\r\nimport EndGameModal from \"./EndGameModal\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectGame } from \"../../state/game/selector\";\r\nimport { Colors } from \"../../domain/colors\";\r\nimport {\r\n  selectAllBuiltConnections,\r\n  selectCurrentPlayer,\r\n  selectLocalPlayer,\r\n} from \"../../state/players/selector\";\r\nimport {\r\n  nextGameTurn,\r\n  setEndTurn,\r\n  setGameState,\r\n} from \"../../state/game/actions\";\r\nimport { setDeck } from \"../../state/deck/actions\";\r\nimport { selectLocalPlayerCards } from \"../../state/deck/selector\";\r\nimport NotificationModal from \"./NotificationModal\";\r\nimport { GameStates } from \"../../domain/game\";\r\nimport { wsSubscribeChannel } from \"../../state/socket/actions\";\r\nimport { GameActionTypes, ServerMessages } from \"../../api/socket\";\r\nimport {\r\n  addBuiltConnection,\r\n  addCompletedTicket,\r\n  addHistory,\r\n  addTicket,\r\n} from \"../../state/players/actions\";\r\n\r\nfunction useNotificationModalShow() {\r\n  const [showNotificationModal, setShowNotificationModal] = useState(false);\r\n  const [notificationMessage, setNotificationMessage] = useState(\"\");\r\n\r\n  const changeShowNotificationModal = (message) => {\r\n    if (showNotificationModal) return;\r\n\r\n    setTimeout(() => {\r\n      setShowNotificationModal(false);\r\n    }, 1000);\r\n    setNotificationMessage(message);\r\n    setShowNotificationModal(true);\r\n  };\r\n  return {\r\n    showNotificationModal,\r\n    notificationMessage,\r\n    changeShowNotificationModal,\r\n  };\r\n}\r\n\r\nfunction useBuildModalShow() {\r\n  const [showBuildModal, setShowBuildModal] = useState(false);\r\n  const [buildableConnection, setBuildableConnection] = useState(-1);\r\n\r\n  const changeShowBuildModal = (show, connectionId) => {\r\n    setBuildableConnection(connectionId);\r\n    setShowBuildModal(show);\r\n  };\r\n\r\n  return { showBuildModal, buildableConnection, changeShowBuildModal };\r\n}\r\n\r\nfunction useCurrentTicketShow(localPlayerTickets) {\r\n  const [currentTicketShow, setCurrentTicketShow] = useState(0);\r\n  const id = useRef(0);\r\n\r\n  const changeCurrentTicketShow = (changeValue) => {\r\n    id.current += changeValue;\r\n\r\n    if (id.current < 0) {\r\n      id.current = localPlayerTickets.length - 1;\r\n    } else if (id.current > localPlayerTickets.length - 1) {\r\n      id.current = 0;\r\n    }\r\n\r\n    setCurrentTicketShow(id.current);\r\n  };\r\n\r\n  return {\r\n    currentTicketShow,\r\n    changeCurrentTicketShow,\r\n  };\r\n}\r\n\r\nfunction GamePage({ setAppState }) {\r\n  const game = useSelector(selectGame);\r\n\r\n  const currentPlayer = useSelector(selectCurrentPlayer);\r\n  const localPlayer = useSelector(selectLocalPlayer);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(\r\n      wsSubscribeChannel(ServerMessages.ACTION_SENT, (resp) => {\r\n        const payload = resp.action.payload;\r\n        switch (resp.action.type) {\r\n          case GameActionTypes.NEXT_TURN:\r\n            dispatch(nextGameTurn());\r\n            break;\r\n          case GameActionTypes.ADD_BUILT_CONNECTION:\r\n            dispatch(\r\n              addBuiltConnection(payload.playerId, payload.connectionId)\r\n            );\r\n            break;\r\n          case GameActionTypes.ADD_TICKET:\r\n            dispatch(addTicket(payload.playerId, payload.ticket));\r\n            break;\r\n          case GameActionTypes.ADD_HISTORY:\r\n            dispatch(addHistory(payload.playerId, payload.historyElement));\r\n            break;\r\n          case GameActionTypes.ADD_COMPLETED_TICKET:\r\n            dispatch(addCompletedTicket(payload.playerId, payload.ticket));\r\n            break;\r\n          case GameActionTypes.END_TURN:\r\n            dispatch(setEndTurn(payload));\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      })\r\n    );\r\n    dispatch(\r\n      wsSubscribeChannel(ServerMessages.STATE_CHANGED, (resp) => {\r\n        const state = resp.state;\r\n        if (state.deck) {\r\n          dispatch(setDeck(state.deck));\r\n        }\r\n      })\r\n    );\r\n  }, [dispatch]);\r\n\r\n  const localPlayerTickets = localPlayer.tickets;\r\n  const allBuiltConnections = useSelector(selectAllBuiltConnections);\r\n  const localPlayerCards = useSelector(selectLocalPlayerCards);\r\n\r\n  const [showTicketCities, setShowTicketCities] = useState(null);\r\n  const { currentTicketShow, changeCurrentTicketShow } = useCurrentTicketShow(\r\n    localPlayerTickets\r\n  );\r\n\r\n  const {\r\n    showBuildModal,\r\n    buildableConnection,\r\n    changeShowBuildModal,\r\n  } = useBuildModalShow();\r\n  const {\r\n    showNotificationModal,\r\n    notificationMessage,\r\n    changeShowNotificationModal,\r\n  } = useNotificationModalShow();\r\n\r\n  const [chosenCity, setChosenCity] = useState(null);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"h-100 w-100 d-flex flex-column\">\r\n        <div className=\"flex-grow-1 d-flex flex-row mt-2\">\r\n          <div className=\"side-bar text-center d-flex flex-column\">\r\n            <PlayerIndicatorPanel />\r\n          </div>\r\n          <div className=\"flex-grow-1 text-center px-2 d-flex align-items-center\">\r\n            <Map\r\n              chosenCity={chosenCity}\r\n              setChosenCity={(city) => {\r\n                if (\r\n                  localPlayer !== currentPlayer ||\r\n                  (game.gameState !== GameStates.USER_BEGIN &&\r\n                    game.gameState !== GameStates.BUILD_LINE)\r\n                ) {\r\n                  changeShowNotificationModal(\"Most nem tudsz építeni.\");\r\n                  return;\r\n                }\r\n                if (city === chosenCity) {\r\n                  setChosenCity(null);\r\n                  dispatch(setGameState(GameStates.USER_BEGIN));\r\n                } else if (chosenCity) {\r\n                  const occupiedConnections = allBuiltConnections.flatMap(\r\n                    ({ _, connections }) => connections\r\n                  );\r\n\r\n                  const connection = Object.values(\r\n                    ticketToRideData.connections\r\n                  ).find(\r\n                    (connection) =>\r\n                      (connection.fromCity === city &&\r\n                        connection.toCity === chosenCity) ||\r\n                      (connection.fromCity === chosenCity &&\r\n                        connection.toCity === city)\r\n                  );\r\n                  if (connection.elements.length > localPlayer.remainingCars) {\r\n                    changeShowNotificationModal(\"Nincs elég vagonod.\");\r\n                    return;\r\n                  }\r\n                  let hasEnoughCards =\r\n                    connection &&\r\n                    localPlayerCards.some(\r\n                      ({ color, amount }) =>\r\n                        (connection.color === \"gray\" ||\r\n                          color === Colors[connection.color.toUpperCase()] ||\r\n                          color === Colors.LOCOMOTIVE) &&\r\n                        amount >= connection.elements.length\r\n                    );\r\n                  if (!hasEnoughCards) {\r\n                    const locomotives = localPlayerCards.find(\r\n                      (card) => card.color === Colors.LOCOMOTIVE\r\n                    ).amount;\r\n\r\n                    if (connection.color === \"gray\") {\r\n                      hasEnoughCards = localPlayerCards.some(\r\n                        ({ _, amount }) =>\r\n                          locomotives + amount >= connection.elements.length\r\n                      );\r\n                    } else {\r\n                      const colorTrains = localPlayerCards.find(\r\n                        (card) =>\r\n                          card.color === Colors[connection.color.toUpperCase()]\r\n                      ).amount;\r\n\r\n                      hasEnoughCards =\r\n                        colorTrains + locomotives >= connection.elements.length;\r\n                    }\r\n                  }\r\n\r\n                  if (\r\n                    connection &&\r\n                    !occupiedConnections.includes(connection.id) &&\r\n                    hasEnoughCards\r\n                  ) {\r\n                    changeShowBuildModal(true, connection.id);\r\n                  } else {\r\n                    dispatch(setGameState(GameStates.USER_BEGIN));\r\n                    changeShowNotificationModal(\r\n                      \"Ezt a vonalat nem tudod megépíteni.\"\r\n                    );\r\n                  }\r\n                  setChosenCity(null);\r\n                } else {\r\n                  setChosenCity(city);\r\n                  dispatch(setGameState(GameStates.BUILD_LINE));\r\n                }\r\n              }}\r\n              showTicketCities={showTicketCities}\r\n            ></Map>\r\n          </div>\r\n          <div className=\"side-bar text-center d-flex flex-column align-items-center\">\r\n            <div>\r\n              <PublicCardsPanel\r\n                changeShowNotificationModal={changeShowNotificationModal}\r\n              />\r\n            </div>\r\n            <div>\r\n              <DeckPanel></DeckPanel>\r\n            </div>\r\n            <div className=\"mt-auto mb-4\">\r\n              <TicketDeckPanel\r\n                setShowTicketCities={setShowTicketCities}\r\n                changeShowNotificationModal={changeShowNotificationModal}\r\n              ></TicketDeckPanel>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"bottom-bar d-flex flex-row\">\r\n          <div className=\"side-bar text-center d-flex flex-column\">\r\n            <CurrentPlayerTicketPanel\r\n              currentTicketShow={currentTicketShow}\r\n              changeCurrentTicketShow={changeCurrentTicketShow}\r\n              setShowTicketCities={setShowTicketCities}\r\n            ></CurrentPlayerTicketPanel>\r\n          </div>\r\n          <div className=\"flex-grow-1 text-center px-2 col\">\r\n            <CurrentPlayerCardsPanel />\r\n          </div>\r\n          <div className=\"side-bar text-center d-flex flex-column\">\r\n            <HistoryPanel />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {showNotificationModal && (\r\n        <NotificationModal message={notificationMessage} />\r\n      )}\r\n      {showBuildModal && (\r\n        <BuildModal\r\n          buildableConnection={buildableConnection}\r\n          closeModal={() => {\r\n            changeShowBuildModal(false, -1);\r\n          }}\r\n        ></BuildModal>\r\n      )}\r\n      {game.gameState === GameStates.END_GAME && (\r\n        <EndGameModal\r\n          setAppState={setAppState}\r\n          showTicketCities={showTicketCities}\r\n          setShowTicketCities={setShowTicketCities}\r\n        ></EndGameModal>\r\n      )}\r\n    </>\r\n  );\r\n}\r\nGamePage.propTypes = {};\r\n\r\nexport default GamePage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}