{"ast":null,"code":"import { ClientMessages } from \"../../api/socket\";\nimport { wsSendMessage } from \"../socket/actions\";\nexport const SET_ROOM = \"CREATE_ROOM\";\nexport const JOIN_ROOM = \"JOIN_ROOM\";\nexport function setRoom(roomId, roomSize) {\n  let players = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  return {\n    type: SET_ROOM,\n    payload: {\n      roomId,\n      roomSize,\n      players\n    }\n  };\n}\nexport function joinRoom(playerId, playerName, roomId, callback) {\n  return dispatch => {\n    const ack = function (resp) {\n      if (resp.status === \"ok\") {\n        dispatch(wsSendMessage(ClientMessages.GET_STATE, [roomId], resp => {\n          const gameRoom = JSON.parse(resp.state);\n          gameRoom.players = [...gameRoom.players, {\n            id: playerId,\n            name: playerName\n          }];\n          dispatch(wsSendMessage(ClientMessages.SYNC_STATE, [gameRoom.roomId, gameRoom, false], function () {}));\n        }));\n      }\n      callback(resp);\n    };\n    dispatch(wsSendMessage(ClientMessages.JOIN_ROOM, [roomId], ack));\n  };\n}\nexport function createRoom(playerId, playerName, roomSize, callback) {\n  return async (dispatch, getState) => {\n    dispatch(wsSendMessage(ClientMessages.CREATE_ROOM, [roomSize], function (resp) {\n      dispatch(setRoom(resp.roomId, roomSize, [{\n        id: playerId,\n        name: playerName\n      }]));\n      const lobbyRoom = getState().lobby;\n      dispatch(wsSendMessage(ClientMessages.SYNC_STATE, [lobbyRoom.roomId, lobbyRoom, false], function () {}));\n      callback(resp);\n    }));\n  };\n}","map":{"version":3,"names":["ClientMessages","wsSendMessage","SET_ROOM","JOIN_ROOM","setRoom","roomId","roomSize","players","type","payload","joinRoom","playerId","playerName","callback","dispatch","ack","resp","status","GET_STATE","gameRoom","JSON","parse","state","id","name","SYNC_STATE","createRoom","getState","CREATE_ROOM","lobbyRoom","lobby"],"sources":["C:/Win11/Programming/Other/ticket-to-ride-app/src/state/lobby/actions.js"],"sourcesContent":["import { ClientMessages } from \"../../api/socket\";\r\nimport { wsSendMessage } from \"../socket/actions\";\r\n\r\nexport const SET_ROOM = \"CREATE_ROOM\";\r\nexport const JOIN_ROOM = \"JOIN_ROOM\";\r\n\r\nexport function setRoom(roomId, roomSize, players = []) {\r\n  return {\r\n    type: SET_ROOM,\r\n    payload: { roomId, roomSize, players },\r\n  };\r\n}\r\n\r\nexport function joinRoom(playerId, playerName, roomId, callback) {\r\n  return (dispatch) => {\r\n    const ack = function (resp) {\r\n      if (resp.status === \"ok\") {\r\n        dispatch(\r\n          wsSendMessage(ClientMessages.GET_STATE, [roomId], (resp) => {\r\n            const gameRoom = JSON.parse(resp.state);\r\n            gameRoom.players = [...gameRoom.players, {id: playerId, name: playerName}];\r\n            dispatch(\r\n              wsSendMessage(\r\n                ClientMessages.SYNC_STATE,\r\n                [gameRoom.roomId, gameRoom, false],\r\n                function () {}\r\n              )\r\n            );\r\n          })\r\n        );\r\n      }\r\n      callback(resp);\r\n    };\r\n    dispatch(wsSendMessage(ClientMessages.JOIN_ROOM, [roomId], ack));\r\n  };\r\n}\r\n\r\nexport function createRoom(playerId, playerName, roomSize, callback) {\r\n  return async (dispatch, getState) => {\r\n    dispatch(\r\n      wsSendMessage(ClientMessages.CREATE_ROOM, [roomSize], function (resp) {\r\n        dispatch(setRoom(resp.roomId, roomSize, [{id: playerId, name: playerName}]));\r\n        const lobbyRoom = getState().lobby;\r\n\r\n        dispatch(\r\n          wsSendMessage(\r\n            ClientMessages.SYNC_STATE,\r\n            [lobbyRoom.roomId, lobbyRoom, false],\r\n            function () {}\r\n          )\r\n        );\r\n\r\n        callback(resp);\r\n      })\r\n    );\r\n  };\r\n}\r\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,SAASC,aAAa,QAAQ,mBAAmB;AAEjD,OAAO,MAAMC,QAAQ,GAAG,aAAa;AACrC,OAAO,MAAMC,SAAS,GAAG,WAAW;AAEpC,OAAO,SAASC,OAAO,CAACC,MAAM,EAAEC,QAAQ,EAAgB;EAAA,IAAdC,OAAO,uEAAG,EAAE;EACpD,OAAO;IACLC,IAAI,EAAEN,QAAQ;IACdO,OAAO,EAAE;MAAEJ,MAAM;MAAEC,QAAQ;MAAEC;IAAQ;EACvC,CAAC;AACH;AAEA,OAAO,SAASG,QAAQ,CAACC,QAAQ,EAAEC,UAAU,EAAEP,MAAM,EAAEQ,QAAQ,EAAE;EAC/D,OAAQC,QAAQ,IAAK;IACnB,MAAMC,GAAG,GAAG,UAAUC,IAAI,EAAE;MAC1B,IAAIA,IAAI,CAACC,MAAM,KAAK,IAAI,EAAE;QACxBH,QAAQ,CACNb,aAAa,CAACD,cAAc,CAACkB,SAAS,EAAE,CAACb,MAAM,CAAC,EAAGW,IAAI,IAAK;UAC1D,MAAMG,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACL,IAAI,CAACM,KAAK,CAAC;UACvCH,QAAQ,CAACZ,OAAO,GAAG,CAAC,GAAGY,QAAQ,CAACZ,OAAO,EAAE;YAACgB,EAAE,EAAEZ,QAAQ;YAAEa,IAAI,EAAEZ;UAAU,CAAC,CAAC;UAC1EE,QAAQ,CACNb,aAAa,CACXD,cAAc,CAACyB,UAAU,EACzB,CAACN,QAAQ,CAACd,MAAM,EAAEc,QAAQ,EAAE,KAAK,CAAC,EAClC,YAAY,CAAC,CAAC,CACf,CACF;QACH,CAAC,CAAC,CACH;MACH;MACAN,QAAQ,CAACG,IAAI,CAAC;IAChB,CAAC;IACDF,QAAQ,CAACb,aAAa,CAACD,cAAc,CAACG,SAAS,EAAE,CAACE,MAAM,CAAC,EAAEU,GAAG,CAAC,CAAC;EAClE,CAAC;AACH;AAEA,OAAO,SAASW,UAAU,CAACf,QAAQ,EAAEC,UAAU,EAAEN,QAAQ,EAAEO,QAAQ,EAAE;EACnE,OAAO,OAAOC,QAAQ,EAAEa,QAAQ,KAAK;IACnCb,QAAQ,CACNb,aAAa,CAACD,cAAc,CAAC4B,WAAW,EAAE,CAACtB,QAAQ,CAAC,EAAE,UAAUU,IAAI,EAAE;MACpEF,QAAQ,CAACV,OAAO,CAACY,IAAI,CAACX,MAAM,EAAEC,QAAQ,EAAE,CAAC;QAACiB,EAAE,EAAEZ,QAAQ;QAAEa,IAAI,EAAEZ;MAAU,CAAC,CAAC,CAAC,CAAC;MAC5E,MAAMiB,SAAS,GAAGF,QAAQ,EAAE,CAACG,KAAK;MAElChB,QAAQ,CACNb,aAAa,CACXD,cAAc,CAACyB,UAAU,EACzB,CAACI,SAAS,CAACxB,MAAM,EAAEwB,SAAS,EAAE,KAAK,CAAC,EACpC,YAAY,CAAC,CAAC,CACf,CACF;MAEDhB,QAAQ,CAACG,IAAI,CAAC;IAChB,CAAC,CAAC,CACH;EACH,CAAC;AACH"},"metadata":{},"sourceType":"module"}