{"ast":null,"code":"import _toConsumableArray from\"C:/Win11/Programming/Other/ticket-to-ride-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"C:/Win11/Programming/Other/ticket-to-ride-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{ticketToRideData}from\"../../data/ticket-to-ride-data\";import{ADD_BUILT_CONNECTION,ADD_COMPLETED_TICKET,ADD_HISTORY,ADD_TICKET,NEXT_PLAYER_TURN,SET_PLAYERS}from\"./actions\";var initialState=[];export function playersReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;var type=action.type,payload=action.payload;switch(type){case SET_PLAYERS:return payload;case NEXT_PLAYER_TURN:return nextTurn(state,payload);case ADD_TICKET:return addTicket(state,payload);case ADD_BUILT_CONNECTION:return addBuiltConnection(state,payload);case ADD_HISTORY:return addHistory(state,payload);case ADD_COMPLETED_TICKET:return addCompletedTicket(state,payload);default:return state;}}function addCompletedTicket(state,payload){var playerId=payload.playerId,ticket=payload.ticket;var ticketData=Object.values(ticket.long?ticketToRideData.longDestinations:ticketToRideData.destinations)[ticket.id];return state.map(function(player){if(player.id===playerId){return _objectSpread(_objectSpread({},player),{},{completedTickets:[].concat(_toConsumableArray(player.completedTickets),[ticket]),points:player.points+ +ticketData.value});}return player;});}function nextTurn(state,payload){var currentPlayerId=payload;return state.map(function(player){if(player.id===currentPlayerId){return _objectSpread(_objectSpread({},player),{},{round:player.round+1});}return player;});}function addTicket(state,payload){var playerId=payload.playerId,ticket=payload.ticket;return state.map(function(player){if(player.id===playerId){return _objectSpread(_objectSpread({},player),{},{tickets:[].concat(_toConsumableArray(player.tickets),[ticket])});}return player;});}function addHistory(state,payload){var playerId=payload.playerId,historyElement=payload.historyElement;return state.map(function(player){if(player.id===playerId){return _objectSpread(_objectSpread({},player),{},{history:[historyElement].concat(_toConsumableArray(player.history)).slice(0,2)});}return player;});}function addBuiltConnection(state,payload){var playerId=payload.playerId,connectionId=payload.connectionId;var connection=Object.values(ticketToRideData.connections)[connectionId-1];var CONNECTION_VALUES=[1,2,4,7,0,15,21];return state.map(function(player){if(player.id===playerId){return _objectSpread(_objectSpread({},player),{},{points:player.points+CONNECTION_VALUES[connection.elements.length-1],builtConnections:[].concat(_toConsumableArray(player.builtConnections),[connectionId]),remainingCars:player.remainingCars-connection.elements.length});}return player;});}","map":{"version":3,"names":["ticketToRideData","ADD_BUILT_CONNECTION","ADD_COMPLETED_TICKET","ADD_HISTORY","ADD_TICKET","NEXT_PLAYER_TURN","SET_PLAYERS","initialState","playersReducer","state","action","type","payload","nextTurn","addTicket","addBuiltConnection","addHistory","addCompletedTicket","playerId","ticket","ticketData","Object","values","long","longDestinations","destinations","id","map","player","completedTickets","points","value","currentPlayerId","round","tickets","historyElement","history","slice","connectionId","connection","connections","CONNECTION_VALUES","elements","length","builtConnections","remainingCars"],"sources":["C:/Win11/Programming/Other/ticket-to-ride-app/src/state/players/reducer.js"],"sourcesContent":["import { ticketToRideData } from \"../../data/ticket-to-ride-data\";\r\nimport {\r\n  ADD_BUILT_CONNECTION,\r\n  ADD_COMPLETED_TICKET,\r\n  ADD_HISTORY,\r\n  ADD_TICKET,\r\n  NEXT_PLAYER_TURN,\r\n  SET_PLAYERS,\r\n} from \"./actions\";\r\n\r\nconst initialState = [];\r\n\r\nexport function playersReducer(state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_PLAYERS:\r\n      return payload;\r\n    case NEXT_PLAYER_TURN:\r\n      return nextTurn(state, payload);\r\n    case ADD_TICKET:\r\n      return addTicket(state, payload);\r\n    case ADD_BUILT_CONNECTION:\r\n      return addBuiltConnection(state, payload);\r\n    case ADD_HISTORY:\r\n      return addHistory(state, payload);\r\n    case ADD_COMPLETED_TICKET:\r\n      return addCompletedTicket(state, payload);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction addCompletedTicket(state, payload) {\r\n  const { playerId, ticket } = payload;\r\n\r\n  const ticketData = Object.values(\r\n    ticket.long\r\n      ? ticketToRideData.longDestinations\r\n      : ticketToRideData.destinations\r\n  )[ticket.id];\r\n\r\n  return state.map((player) => {\r\n    if (player.id === playerId) {\r\n      return {\r\n        ...player,\r\n        completedTickets: [...player.completedTickets, ticket],\r\n        points: player.points + +ticketData.value,\r\n      };\r\n    }\r\n    return player;\r\n  });\r\n}\r\n\r\nfunction nextTurn(state, payload) {\r\n  const currentPlayerId = payload;\r\n  return state.map((player) => {\r\n    if (player.id === currentPlayerId) {\r\n      return { ...player, round: player.round + 1 };\r\n    }\r\n    return player;\r\n  });\r\n}\r\n\r\nfunction addTicket(state, payload) {\r\n  const { playerId, ticket } = payload;\r\n\r\n  return state.map((player) => {\r\n    if (player.id === playerId) {\r\n      return {\r\n        ...player,\r\n        tickets: [...player.tickets, ticket],\r\n      };\r\n    }\r\n    return player;\r\n  });\r\n}\r\n\r\nfunction addHistory(state, payload) {\r\n  const { playerId, historyElement } = payload;\r\n  return state.map((player) => {\r\n    if (player.id === playerId) {\r\n      return {\r\n        ...player,\r\n        history: [historyElement, ...player.history].slice(0, 2),\r\n      };\r\n    }\r\n    return player;\r\n  });\r\n}\r\n\r\nfunction addBuiltConnection(state, payload) {\r\n  const { playerId, connectionId } = payload;\r\n  const connection = Object.values(ticketToRideData.connections)[\r\n    connectionId - 1\r\n  ];\r\n  const CONNECTION_VALUES = [1, 2, 4, 7, 0, 15, 21];\r\n\r\n  return state.map((player) => {\r\n    if (player.id === playerId) {\r\n      return {\r\n        ...player,\r\n        points:\r\n          player.points + CONNECTION_VALUES[connection.elements.length - 1],\r\n        builtConnections: [...player.builtConnections, connectionId],\r\n        remainingCars: player.remainingCars - connection.elements.length,\r\n      };\r\n    }\r\n    return player;\r\n  });\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}