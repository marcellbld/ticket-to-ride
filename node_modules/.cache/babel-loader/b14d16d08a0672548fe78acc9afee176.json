{"ast":null,"code":"var _jsxFileName = \"C:\\\\Win11\\\\Programming\\\\Other\\\\ticket-to-ride-app\\\\src\\\\views\\\\game\\\\panel\\\\deck-panel\\\\DeckPanel.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ClientMessages } from \"../../../../api/socket\";\nimport { Colors } from \"../../../../domain/colors\";\nimport { GameStates } from \"../../../../domain/game\";\nimport { updateCard } from \"../../../../state/deck/actions\";\nimport { selectFreeCards, selectTopCardOfDeck } from \"../../../../state/deck/selector\";\nimport { setGameState } from \"../../../../state/game/actions\";\nimport { selectGame } from \"../../../../state/game/selector\";\nimport { addHistory } from \"../../../../state/players/actions\";\nimport { selectCurrentPlayer, selectLocalPlayer } from \"../../../../state/players/selector\";\nimport { wsSendMessage } from \"../../../../state/socket/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction DeckPanel() {\n  _s();\n  const dispatch = useDispatch();\n  const freeCardsNumber = useSelector(selectFreeCards).length;\n  const topCardOfDeck = useSelector(selectTopCardOfDeck);\n  const currentPlayer = useSelector(selectCurrentPlayer);\n  const game = useSelector(selectGame);\n  const localPlayer = useSelector(selectLocalPlayer);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"H\\xFAz\\xF3pakli\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"game-card card my-2 mx-1 p-0 border\",\n      style: {\n        backgroundColor: \"#333333\"\n      },\n      onClick: () => {\n        if ((game.gameState === GameStates.USER_BEGIN || game.gameState === GameStates.DRAW_CARDS) && currentPlayer === localPlayer) {\n          dispatch(updateCard({\n            ...topCardOfDeck,\n            cardState: currentPlayer.id\n          }));\n          dispatch(addHistory(currentPlayer.id, \"Kártyát húzott: \" + Object.keys(Colors).find(c => Colors[c] === topCardOfDeck.color)));\n          dispatch(setGameState(game.gameState === GameStates.USER_BEGIN ? GameStates.DRAW_CARDS : GameStates.DRAW_CARD2));\n          dispatch(wsSendMessage(ClientMessages.SYNC_STATE, [game.id, {\n            game: game\n          }, true], function () {}));\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"game-card card w-100 h-100 border\",\n        style: {\n          backgroundColor: \"#333333\",\n          top: \"-0.2rem\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"game-card card w-100 h-100 border-0\",\n          style: {\n            backgroundColor: \"#999999\",\n            top: \"-0.2rem\"\n          },\n          children: freeCardsNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(DeckPanel, \"sRyyy+a8pnhaqPVQvUxTK1J+00E=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n_c = DeckPanel;\nexport default DeckPanel;\nvar _c;\n$RefreshReg$(_c, \"DeckPanel\");","map":{"version":3,"names":["React","useDispatch","useSelector","ClientMessages","Colors","GameStates","updateCard","selectFreeCards","selectTopCardOfDeck","setGameState","selectGame","addHistory","selectCurrentPlayer","selectLocalPlayer","wsSendMessage","DeckPanel","dispatch","freeCardsNumber","length","topCardOfDeck","currentPlayer","game","localPlayer","backgroundColor","gameState","USER_BEGIN","DRAW_CARDS","cardState","id","Object","keys","find","c","color","DRAW_CARD2","SYNC_STATE","top"],"sources":["C:/Win11/Programming/Other/ticket-to-ride-app/src/views/game/panel/deck-panel/DeckPanel.js"],"sourcesContent":["import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ClientMessages } from \"../../../../api/socket\";\r\nimport { Colors } from \"../../../../domain/colors\";\r\nimport { GameStates } from \"../../../../domain/game\";\r\nimport { updateCard } from \"../../../../state/deck/actions\";\r\nimport {\r\n  selectFreeCards,\r\n  selectTopCardOfDeck,\r\n} from \"../../../../state/deck/selector\";\r\nimport { setGameState } from \"../../../../state/game/actions\";\r\nimport { selectGame } from \"../../../../state/game/selector\";\r\nimport { addHistory } from \"../../../../state/players/actions\";\r\nimport { selectCurrentPlayer, selectLocalPlayer } from \"../../../../state/players/selector\";\r\nimport { wsSendMessage } from \"../../../../state/socket/actions\";\r\n\r\nfunction DeckPanel() {\r\n  const dispatch = useDispatch();\r\n  const freeCardsNumber = useSelector(selectFreeCards).length;\r\n  const topCardOfDeck = useSelector(selectTopCardOfDeck);\r\n  const currentPlayer = useSelector(selectCurrentPlayer);\r\n  const game = useSelector(selectGame);\r\n\r\n  const localPlayer = useSelector(selectLocalPlayer);\r\n\r\n  return (\r\n    <>\r\n      <span>Húzópakli</span>\r\n      <button\r\n        className=\"game-card card my-2 mx-1 p-0 border\"\r\n        style={{ backgroundColor: \"#333333\" }}\r\n        onClick={() => {\r\n          if (\r\n            (game.gameState === GameStates.USER_BEGIN ||\r\n            game.gameState === GameStates.DRAW_CARDS) && currentPlayer === localPlayer\r\n          ) {\r\n            dispatch(\r\n              updateCard({ ...topCardOfDeck, cardState: currentPlayer.id })\r\n            );\r\n            dispatch(addHistory(currentPlayer.id, \"Kártyát húzott: \"+Object.keys(Colors).find(c => Colors[c] === topCardOfDeck.color)));\r\n            dispatch(\r\n              setGameState(\r\n                game.gameState === GameStates.USER_BEGIN\r\n                  ? GameStates.DRAW_CARDS\r\n                  : GameStates.DRAW_CARD2\r\n              )\r\n            );\r\n            dispatch(wsSendMessage(ClientMessages.SYNC_STATE, [game.id, {game: game}, true], function() {} ));\r\n          }\r\n        }}\r\n      >\r\n        <span\r\n          className=\"game-card card w-100 h-100 border\"\r\n          style={{ backgroundColor: \"#333333\", top: \"-0.2rem\" }}\r\n        >\r\n          <span\r\n            className=\"game-card card w-100 h-100 border-0\"\r\n            style={{ backgroundColor: \"#999999\", top: \"-0.2rem\" }}\r\n          >\r\n            {freeCardsNumber}\r\n          </span>\r\n        </span>\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DeckPanel;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,cAAc,QAAQ,wBAAwB;AACvD,SAASC,MAAM,QAAQ,2BAA2B;AAClD,SAASC,UAAU,QAAQ,yBAAyB;AACpD,SAASC,UAAU,QAAQ,gCAAgC;AAC3D,SACEC,eAAe,EACfC,mBAAmB,QACd,iCAAiC;AACxC,SAASC,YAAY,QAAQ,gCAAgC;AAC7D,SAASC,UAAU,QAAQ,iCAAiC;AAC5D,SAASC,UAAU,QAAQ,mCAAmC;AAC9D,SAASC,mBAAmB,EAAEC,iBAAiB,QAAQ,oCAAoC;AAC3F,SAASC,aAAa,QAAQ,kCAAkC;AAAC;AAAA;AAEjE,SAASC,SAAS,GAAG;EAAA;EACnB,MAAMC,QAAQ,GAAGf,WAAW,EAAE;EAC9B,MAAMgB,eAAe,GAAGf,WAAW,CAACK,eAAe,CAAC,CAACW,MAAM;EAC3D,MAAMC,aAAa,GAAGjB,WAAW,CAACM,mBAAmB,CAAC;EACtD,MAAMY,aAAa,GAAGlB,WAAW,CAACU,mBAAmB,CAAC;EACtD,MAAMS,IAAI,GAAGnB,WAAW,CAACQ,UAAU,CAAC;EAEpC,MAAMY,WAAW,GAAGpB,WAAW,CAACW,iBAAiB,CAAC;EAElD,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAsB,eACtB;MACE,SAAS,EAAC,qCAAqC;MAC/C,KAAK,EAAE;QAAEU,eAAe,EAAE;MAAU,CAAE;MACtC,OAAO,EAAE,MAAM;QACb,IACE,CAACF,IAAI,CAACG,SAAS,KAAKnB,UAAU,CAACoB,UAAU,IACzCJ,IAAI,CAACG,SAAS,KAAKnB,UAAU,CAACqB,UAAU,KAAKN,aAAa,KAAKE,WAAW,EAC1E;UACAN,QAAQ,CACNV,UAAU,CAAC;YAAE,GAAGa,aAAa;YAAEQ,SAAS,EAAEP,aAAa,CAACQ;UAAG,CAAC,CAAC,CAC9D;UACDZ,QAAQ,CAACL,UAAU,CAACS,aAAa,CAACQ,EAAE,EAAE,kBAAkB,GAACC,MAAM,CAACC,IAAI,CAAC1B,MAAM,CAAC,CAAC2B,IAAI,CAACC,CAAC,IAAI5B,MAAM,CAAC4B,CAAC,CAAC,KAAKb,aAAa,CAACc,KAAK,CAAC,CAAC,CAAC;UAC3HjB,QAAQ,CACNP,YAAY,CACVY,IAAI,CAACG,SAAS,KAAKnB,UAAU,CAACoB,UAAU,GACpCpB,UAAU,CAACqB,UAAU,GACrBrB,UAAU,CAAC6B,UAAU,CAC1B,CACF;UACDlB,QAAQ,CAACF,aAAa,CAACX,cAAc,CAACgC,UAAU,EAAE,CAACd,IAAI,CAACO,EAAE,EAAE;YAACP,IAAI,EAAEA;UAAI,CAAC,EAAE,IAAI,CAAC,EAAE,YAAW,CAAC,CAAC,CAAE,CAAC;QACnG;MACF,CAAE;MAAA,uBAEF;QACE,SAAS,EAAC,mCAAmC;QAC7C,KAAK,EAAE;UAAEE,eAAe,EAAE,SAAS;UAAEa,GAAG,EAAE;QAAU,CAAE;QAAA,uBAEtD;UACE,SAAS,EAAC,qCAAqC;UAC/C,KAAK,EAAE;YAAEb,eAAe,EAAE,SAAS;YAAEa,GAAG,EAAE;UAAU,CAAE;UAAA,UAErDnB;QAAe;UAAA;UAAA;UAAA;QAAA;MACX;QAAA;QAAA;QAAA;MAAA;IACF;MAAA;MAAA;MAAA;IAAA,QACA;EAAA,gBACR;AAEP;AAAC,GAjDQF,SAAS;EAAA,QACCd,WAAW,EACJC,WAAW,EACbA,WAAW,EACXA,WAAW,EACpBA,WAAW,EAEJA,WAAW;AAAA;AAAA,KAPxBa,SAAS;AAmDlB,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module"}