{"ast":null,"code":"import { ClientMessages, GameActionTypes } from \"../../api/socket\";\nimport { wsSendMessage } from \"../socket/actions\";\nexport const SET_PLAYERS = \"SET_PLAYERS\";\nexport const ADD_BUILT_CONNECTION = \"ADD_BUILT_CONNECTION\";\nexport const ADD_TICKET = \"ADD_TICKET\";\nexport const NEXT_PLAYER_TURN = \"NEXT_PLAYER_TURN\";\nexport const ADD_HISTORY = \"ADD_HISTORY\";\nexport const ADD_COMPLETED_TICKET = \"ADD_COMPLETED_TICKET\";\nexport function setPlayers(players) {\n  return {\n    type: SET_PLAYERS,\n    payload: players\n  };\n}\nfunction addBuiltConnectionToPlayer(playerId, connectionId) {\n  return {\n    type: ADD_BUILT_CONNECTION,\n    payload: {\n      playerId,\n      connectionId\n    }\n  };\n}\nexport function nextPlayerTurn(currentPlayerId) {\n  return {\n    type: NEXT_PLAYER_TURN,\n    payload: currentPlayerId\n  };\n}\nfunction addTicketToPlayer(playerId, ticket) {\n  return {\n    type: ADD_TICKET,\n    payload: {\n      playerId: playerId,\n      ticket\n    }\n  };\n}\nfunction addHistoryToPlayer(playerId, historyElement) {\n  return {\n    type: ADD_HISTORY,\n    payload: {\n      playerId,\n      historyElement\n    }\n  };\n}\nfunction addCompletedTicketToPlayer(playerId, ticket) {\n  return {\n    type: ADD_COMPLETED_TICKET,\n    payload: {\n      playerId,\n      ticket\n    }\n  };\n}\nexport function addBuiltConnection(playerId, connectionId) {\n  let broadcast = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  return (dispatch, getState) => {\n    dispatch(addBuiltConnectionToPlayer(playerId, connectionId));\n    if (broadcast) {\n      dispatch(wsSendMessage(ClientMessages.SYNC_ACTION, [getState().game.id, {\n        type: GameActionTypes.ADD_BUILT_CONNECTION,\n        payload: {\n          playerId,\n          connectionId\n        }\n      }, true], function () {}));\n    }\n  };\n}\nexport function addTicket(playerId, ticket) {\n  let broadcast = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  return (dispatch, getState) => {\n    dispatch(addTicketToPlayer(playerId, ticket));\n    if (broadcast) {\n      dispatch(wsSendMessage(ClientMessages.SYNC_ACTION, [getState().game.id, {\n        type: GameActionTypes.ADD_TICKET,\n        payload: {\n          playerId,\n          ticket\n        }\n      }, true], function () {}));\n    }\n  };\n}\nexport function addHistory(playerId, historyElement) {\n  let broadcast = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  return (dispatch, getState) => {\n    dispatch(addHistoryToPlayer(playerId, historyElement));\n    if (broadcast) {\n      dispatch(wsSendMessage(ClientMessages.SYNC_ACTION, [getState().game.id, {\n        type: GameActionTypes.ADD_HISTORY,\n        payload: {\n          playerId,\n          historyElement\n        }\n      }, true], function () {}));\n    }\n  };\n}\nexport function addCompletedTicket(playerId, ticket) {\n  let broadcast = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  return (dispatch, getState) => {\n    dispatch(addCompletedTicketToPlayer(playerId, ticket));\n    if (broadcast) {\n      dispatch(wsSendMessage(ClientMessages.SYNC_ACTION, [getState().game.id, {\n        type: GameActionTypes.ADD_COMPLETED_TICKET,\n        payload: {\n          playerId,\n          ticket\n        }\n      }, true], function () {}));\n    }\n  };\n}","map":{"version":3,"names":["ClientMessages","GameActionTypes","wsSendMessage","SET_PLAYERS","ADD_BUILT_CONNECTION","ADD_TICKET","NEXT_PLAYER_TURN","ADD_HISTORY","ADD_COMPLETED_TICKET","setPlayers","players","type","payload","addBuiltConnectionToPlayer","playerId","connectionId","nextPlayerTurn","currentPlayerId","addTicketToPlayer","ticket","addHistoryToPlayer","historyElement","addCompletedTicketToPlayer","addBuiltConnection","broadcast","dispatch","getState","SYNC_ACTION","game","id","addTicket","addHistory","addCompletedTicket"],"sources":["C:/Win11/Programming/Other/ticket-to-ride-app/src/state/players/actions.js"],"sourcesContent":["import { ClientMessages, GameActionTypes } from \"../../api/socket\";\r\nimport { wsSendMessage } from \"../socket/actions\";\r\n\r\nexport const SET_PLAYERS = \"SET_PLAYERS\";\r\nexport const ADD_BUILT_CONNECTION = \"ADD_BUILT_CONNECTION\";\r\nexport const ADD_TICKET = \"ADD_TICKET\";\r\nexport const NEXT_PLAYER_TURN = \"NEXT_PLAYER_TURN\";\r\nexport const ADD_HISTORY = \"ADD_HISTORY\";\r\nexport const ADD_COMPLETED_TICKET = \"ADD_COMPLETED_TICKET\";\r\n\r\nexport function setPlayers(players) {\r\n  return {\r\n    type: SET_PLAYERS,\r\n    payload: players,\r\n  };\r\n}\r\n\r\nfunction addBuiltConnectionToPlayer(playerId, connectionId) {\r\n  return {\r\n    type: ADD_BUILT_CONNECTION,\r\n    payload: { playerId, connectionId },\r\n  };\r\n}\r\nexport function nextPlayerTurn(currentPlayerId) {\r\n  return {\r\n    type: NEXT_PLAYER_TURN,\r\n    payload: currentPlayerId,\r\n  };\r\n}\r\n\r\nfunction addTicketToPlayer(playerId, ticket) {\r\n  return {\r\n    type: ADD_TICKET,\r\n    payload: { playerId: playerId, ticket },\r\n  };\r\n}\r\n\r\nfunction addHistoryToPlayer(playerId, historyElement) {\r\n  return {\r\n    type: ADD_HISTORY,\r\n    payload: { playerId, historyElement },\r\n  };\r\n}\r\n\r\nfunction addCompletedTicketToPlayer(playerId, ticket) {\r\n  return {\r\n    type: ADD_COMPLETED_TICKET,\r\n    payload: { playerId, ticket },\r\n  };\r\n}\r\n\r\nexport function addBuiltConnection(playerId, connectionId, broadcast = false) {\r\n  return (dispatch, getState) => {\r\n    dispatch(addBuiltConnectionToPlayer(playerId, connectionId));\r\n\r\n    if (broadcast) {\r\n      dispatch(\r\n        wsSendMessage(\r\n          ClientMessages.SYNC_ACTION,\r\n          [\r\n            getState().game.id,\r\n            {\r\n              type: GameActionTypes.ADD_BUILT_CONNECTION,\r\n              payload: { playerId, connectionId },\r\n            },\r\n            true,\r\n          ],\r\n          function () {}\r\n        )\r\n      );\r\n    }\r\n  };\r\n}\r\n\r\nexport function addTicket(playerId, ticket, broadcast = false) {\r\n  return (dispatch, getState) => {\r\n    dispatch(addTicketToPlayer(playerId, ticket));\r\n\r\n    if (broadcast) {\r\n      dispatch(\r\n        wsSendMessage(\r\n          ClientMessages.SYNC_ACTION,\r\n          [\r\n            getState().game.id,\r\n            { type: GameActionTypes.ADD_TICKET, payload: { playerId, ticket } },\r\n            true,\r\n          ],\r\n          function () {}\r\n        )\r\n      );\r\n    }\r\n  };\r\n}\r\n\r\nexport function addHistory(playerId, historyElement, broadcast = false) {\r\n  return (dispatch, getState) => {\r\n    dispatch(addHistoryToPlayer(playerId, historyElement));\r\n\r\n    if (broadcast) {\r\n      dispatch(\r\n        wsSendMessage(\r\n          ClientMessages.SYNC_ACTION,\r\n          [\r\n            getState().game.id,\r\n            {\r\n              type: GameActionTypes.ADD_HISTORY,\r\n              payload: { playerId, historyElement },\r\n            },\r\n            true,\r\n          ],\r\n          function () {}\r\n        )\r\n      );\r\n    }\r\n  };\r\n}\r\n\r\nexport function addCompletedTicket(playerId, ticket, broadcast = false) {\r\n  return (dispatch, getState) => {\r\n    dispatch(addCompletedTicketToPlayer(playerId, ticket));\r\n\r\n    if (broadcast) {\r\n      dispatch(\r\n        wsSendMessage(\r\n          ClientMessages.SYNC_ACTION,\r\n          [\r\n            getState().game.id,\r\n            {\r\n              type: GameActionTypes.ADD_COMPLETED_TICKET,\r\n              payload: { playerId, ticket },\r\n            },\r\n            true,\r\n          ],\r\n          function () {}\r\n        )\r\n      );\r\n    }\r\n  };\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}